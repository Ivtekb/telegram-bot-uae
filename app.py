from flask import Flask, request, jsonify
import requests
import os
import re
from datetime import datetime

app = Flask(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "8074002738:AAGNAAHE9sdUDRl7EVwLGYYPrnZK48cxBf4"

# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤—Ä–µ–º–µ–Ω–Ω–æ –≤ –ø–∞–º—è—Ç–∏)
user_sessions = {}

@app.route('/')
def home():
    return "ü§ñ UAE Property Bot (@ivandubai_signal_bot) is running!"

@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        update = request.json
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫ (inline keyboard)
        if update.get('callback_query'):
            callback = update['callback_query']
            chat_id = callback['from']['id']
            data = callback['data']
            message_id = callback['message']['message_id']
            
            handle_callback(callback)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        elif update and update.get('message'):
            chat_id = update['message']['chat']['id']
            text = update['message'].get('text', '')
            first_name = update['message']['from'].get('first_name', '–¥—Ä—É–≥')
            
            # –ü–æ–ª—É—á–∏—Ç—å —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if chat_id not in user_sessions:
                user_sessions[chat_id] = {'stage': 'start', 'data': {'name': first_name}}
            
            session = user_sessions[chat_id]
            
            # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
            route_message(chat_id, text, session)
        
        return jsonify({'status': 'ok'})
    
    except Exception as e:
        print(f"Error: {e}")
        return jsonify({'status': 'error'})

def route_message(chat_id, text, session):
    """–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —ç—Ç–∞–ø–∞–º"""
    stage = session.get('stage', 'start')
    
    if text == '/start':
        handle_start(chat_id)
    elif stage == 'language_select':
        handle_language_selection(chat_id, text, session)
    elif stage == 'role_select':
        handle_role_selection(chat_id, text, session)
    elif stage == 'budget_input':
        handle_budget_input(chat_id, text, session)
    elif stage == 'priority_select':
        handle_priority_selection(chat_id, text, session)
    elif stage == 'show_locations':
        handle_location_selection(chat_id, text, session)
    # –ú–æ–¥—É–ª—å –≤–ª–∞–¥–µ–ª–µ—Ü (–ø—Ä–æ–¥–∞—Ç—å/—Å–¥–∞—Ç—å)
    elif stage == 'owner_action_select':
        handle_owner_action_selection(chat_id, text, session)
    elif stage == 'owner_property_type':
        handle_owner_property_type(chat_id, text, session)
    elif stage == 'owner_rooms':
        handle_owner_rooms(chat_id, text, session)
    elif stage == 'owner_features':
        handle_owner_features(chat_id, text, session)
    elif stage == 'owner_occupancy':
        handle_owner_occupancy(chat_id, text, session)
    elif stage == 'owner_price_range':
        handle_owner_price_range(chat_id, text, session)
    elif stage == 'owner_documents':
        handle_owner_documents(chat_id, text, session)
    elif stage == 'owner_additional_params':
        handle_owner_additional_params(chat_id, text, session)
    # –ú–æ–¥—É–ª—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    elif stage == 'contact_method_select':
        handle_contact_method_selection(chat_id, text, session)
    elif stage == 'phone_input':
        handle_phone_input(chat_id, text, session)
    elif stage == 'email_input':
        handle_email_input(chat_id, text, session)
    elif stage == 'telegram_input':
        handle_telegram_input(chat_id, text, session)
    elif stage == 'contact_confirmation':
        handle_contact_confirmation(chat_id, text, session)
    else:
        send_message(chat_id, msg, parse_mode='HTML')
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏" if lang == 'ru' else "Choose contact method"
        send_message(chat_id, msg)

def handle_phone_input(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    lang = session['data'].get('language', 'ru')
    
    if text == '‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é' or text == '‚úçÔ∏è Enter manually':
        if lang == 'ru':
            msg = "üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n\n<i>–ü—Ä–∏–º–µ—Ä: +971501234567</i>"
        else:
            msg = "üì± Enter number in international format:\n\n<i>Example: +971501234567</i>"
        send_message(chat_id, msg, parse_mode='HTML')
        return
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    phone_pattern = r'^(\+?\d{9,15})d, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º")

def handle_start(chat_id):
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã - –≤—ã–±–æ—Ä —è–∑—ã–∫–∞"""
    user_sessions[chat_id] = {'stage': 'language_select', 'data': {}}
    
    keyboard = {
        'keyboard': [
            ['–†—É—Å—Å–∫–∏–π', 'English']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    text = "üè† <b>UAE Property Navigator</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language:"
    send_message(chat_id, text, keyboard, parse_mode='HTML')

def handle_language_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    if '–†—É—Å—Å–∫–∏–π' in text:
        session['data']['language'] = 'ru'
        session['stage'] = 'role_select'
        
        keyboard = {
            'keyboard': [
                ['üè† –ñ–∏—Ç—å', 'üìà –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å'],
                ['üîÑ –ü—Ä–æ–¥–∞—Ç—å/–°–¥–∞—Ç—å', 'üéØ –°–º–µ—à–∞–Ω–Ω—ã–π']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        name = session['data'].get('name', '–¥—Ä—É–≥')
        text_msg = f"–ü—Ä–∏–≤–µ—Ç, {name}. –ò–≤–∞–Ω, —Ü–∏—Ñ—Ä–æ–≤–æ–π –Ω–∞–ø–∞—Ä–Ω–∏–∫ –≤ —ç—Ñ–∏—Ä–µ.\n\n–•–æ—á—É —É—Å–ª—ã—à–∞—Ç—å —Ç–≤–æ–π —Ç–µ–∫—É—â–∏–π —Ñ–æ–∫—É—Å: –∂–∏—Ç—å, –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–∫—Ç–∏–≤–æ–º?"
        
        send_message(chat_id, text_msg, keyboard)
        
    elif 'English' in text:
        session['data']['language'] = 'en'
        session['stage'] = 'role_select'
        
        keyboard = {
            'keyboard': [
                ['üè† Live', 'üìà Invest'],
                ['üîÑ Sell/Rent', 'üéØ Mixed']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        name = session['data'].get('name', 'friend')
        text_msg = f"Hi, {name}. Ivan, digital partner online.\n\nWhat's your current focus: live, invest, manage property?"
        
        send_message(chat_id, text_msg, keyboard)
    else:
        send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")

def handle_role_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    lang = session['data'].get('language', 'ru')
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å
    if text in ['üè† –ñ–∏—Ç—å', 'üè† Live']:
        session['data']['role'] = 'live'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    elif text in ['üìà –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å', 'üìà Invest']:
        session['data']['role'] = 'invest'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    elif text in ['üîÑ –ü—Ä–æ–¥–∞—Ç—å/–°–¥–∞—Ç—å', 'üîÑ Sell/Rent']:
        session['data']['role'] = 'owner'
        session['stage'] = 'owner_action_select'
        start_owner_flow(chat_id, session)
    elif text in ['üéØ –°–º–µ—à–∞–Ω–Ω—ã–π', 'üéØ Mixed']:
        session['data']['role'] = 'mixed'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    else:
        msg = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Please choose one of the suggested options"
        send_message(chat_id, msg)

def ask_budget(chat_id, session):
    """–ó–∞–ø—Ä–æ—Å –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π/–∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤"""
    lang = session['data'].get('language', 'ru')
    
    if lang == 'ru':
        msg = "–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫–æ–≤ –æ—Ä–∏–µ–Ω—Ç–∏—Ä –ø–æ –±—é–¥–∂–µ—Ç—É?\n\nüí∞ –ù–∞–ø—Ä–∏–º–µ—Ä: 2-3M AED, 1.5M AED, 5M+ AED"
    else:
        msg = "Great! What's your budget range?\n\nüí∞ For example: 2-3M AED, 1.5M AED, 5M+ AED"
    
    send_message(chat_id, msg)

def handle_budget_input(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –±—é–¥–∂–µ—Ç–∞"""
    lang = session['data'].get('language', 'ru')
    session['data']['budget'] = text
    session['stage'] = 'priority_select'
    
    keyboard = {
        'keyboard': [
            ['üåä –£—Ç—Ä–æ —É –≤–æ–¥—ã', 'üèôÔ∏è –î–æ—Å—Ç—É–ø –∫ —Ü–µ–Ω—Ç—Ä—É'] if lang == 'ru' else ['üåä Water morning', 'üèôÔ∏è City access'],
            ['‚öñÔ∏è –ë–∞–ª–∞–Ω—Å'] if lang == 'ru' else ['‚öñÔ∏è Balance']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = f"–ë—é–¥–∂–µ—Ç {text} –ø—Ä–∏–Ω—è—Ç!\n\nü§î –ß—Ç–æ –≤–∞–∂–Ω–µ–µ: —É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ —É –≤–æ–¥—ã –∏–ª–∏ –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –¥–µ–ª–æ–≤–æ–º—É —Ü–µ–Ω—Ç—Ä—É?"
    else:
        msg = f"Budget {text} noted!\n\nü§î What's more important: peaceful morning by water or quick access to business center?"
    
    send_message(chat_id, msg, keyboard)

def handle_priority_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üåä –£—Ç—Ä–æ —É –≤–æ–¥—ã', 'üåä Water morning']:
        session['data']['priority'] = 'water'
    elif text in ['üèôÔ∏è –î–æ—Å—Ç—É–ø –∫ —Ü–µ–Ω—Ç—Ä—É', 'üèôÔ∏è City access']:
        session['data']['priority'] = 'center'
    elif text in ['‚öñÔ∏è –ë–∞–ª–∞–Ω—Å', '‚öñÔ∏è Balance']:
        session['data']['priority'] = 'balance'
    else:
        msg = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Please choose one of the options"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'show_locations'
    show_location_pulse(chat_id, session)

def show_location_pulse(chat_id, session):
    """–ü–æ–∫–∞–∑ –ø—É–ª—å—Å–∞ –ª–æ–∫–∞—Ü–∏–π"""
    lang = session['data'].get('language', 'ru')
    priority = session['data'].get('priority')
    role = session['data'].get('role')
    
    if lang == 'ru':
        msg = "üåä <b>–ü—É–ª—å—Å –ª–æ–∫–∞—Ü–∏–π –ø–æ–¥ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
        
        if priority == 'water' or priority == 'balance':
            msg += "üèùÔ∏è <b>Palm Jumeirah</b>\n"
            msg += "–†–∞–Ω–Ω–∏–π —Å–≤–µ—Ç, —á–∞—Å—Ç–Ω—ã–π —Ä–∏—Ç—É–∞–ª —É—Ç—Ä–∞\n"
            msg += "–Ø–∫–æ—Ä—è: —Ç–∏—à–∏–Ω–∞ —Ñ—Ä–æ–Ω—Ç–∞, –ø–∞–Ω–æ—Ä–∞–º–∞\n\n"
            
            msg += "üåä <b>Dubai Marina</b>\n"
            msg += "–í–æ–¥–Ω—ã–π —Ä–∏—Ç–º, –¥–∏–Ω–∞–º–∏–∫–∞ —è—Ö—Ç\n"
            msg += "–ê—Ç–º–æ—Å—Ñ–µ—Ä–∞: –∞–∫—Ç–∏–≤–Ω–∞—è –∂–∏–∑–Ω—å —É –≤–æ–¥—ã\n\n"
        
        if priority == 'center' or priority == 'balance':
            msg += "üèôÔ∏è <b>Downtown Dubai</b>\n"
            msg += "–≠–Ω–µ—Ä–≥–∏—è —Ü–µ–Ω—Ç—Ä–∞, –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ø–∞–Ω–æ—Ä–∞–º–∞\n"
            msg += "–§–æ–∫—É—Å: –¥–∏–Ω–∞–º–∏–∫–∞ –≥–æ—Ä–æ–¥–∞, –ø—Ä–µ—Å—Ç–∏–∂ –≤—ã—Å–æ—Ç—ã\n\n"
            
            msg += "üèõÔ∏è <b>Business Bay</b>\n"
            msg += "–ë–∏–∑–Ω–µ—Å-–ø—É–ª—å—Å, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Ñ–æ–∫—É—Å\n"
            msg += "–ü—Ä–æ—Ñ–∏–ª—å: –¥–µ–ª–æ–≤–æ–π —Ü–µ–Ω—Ç—Ä, –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å\n\n"
        
        keyboard = {
            'keyboard': [
                ['üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –±—Ä–æ–∫–µ—Ä–æ–º'],
                ['üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ']
            ],
            'resize_keyboard': True
        }
        
        msg += "üéØ <b>–ì–æ—Ç–æ–≤ –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É —Ä–∞–∑–±–æ—Ä—É?</b>"
        
    else:
        msg = "üåä <b>Location Pulse for Your Profile</b>\n\n"
        
        if priority == 'water' or priority == 'balance':
            msg += "üèùÔ∏è <b>Palm Jumeirah</b>\n"
            msg += "Early light, private morning ritual\n"
            msg += "Anchors: front serenity, panorama\n\n"
            
            msg += "üåä <b>Dubai Marina</b>\n"
            msg += "Water rhythm, yacht dynamics\n"
            msg += "Atmosphere: active waterfront life\n\n"
        
        if priority == 'center' or priority == 'balance':
            msg += "üèôÔ∏è <b>Downtown Dubai</b>\n"
            msg += "City energy, vertical panorama\n"
            msg += "Focus: urban dynamics, height prestige\n\n"
            
            msg += "üèõÔ∏è <b>Business Bay</b>\n"
            msg += "Business pulse, investment focus\n"
            msg += "Profile: business center, liquidity\n\n"
        
        keyboard = {
            'keyboard': [
                ['üìû Contact broker'],
                ['üîÑ Start over']
            ],
            'resize_keyboard': True
        }
        
        msg += "üéØ <b>Ready for detailed analysis?</b>"
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_location_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –±—Ä–æ–∫–µ—Ä–æ–º', 'üìû Contact broker']:
        session['stage'] = 'contact_method_select'
        start_contact_flow(chat_id, session)
    elif text in ['üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', 'üîÑ Start over']:
        handle_start(chat_id)
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö" if lang == 'ru' else "Choose an action from the suggested options"
        send_message(chat_id, msg)

# ==================== –ú–û–î–£–õ–¨ –í–õ–ê–î–ï–õ–ï–¶ (–ü–†–û–î–ê–¢–¨/–°–î–ê–¢–¨) ====================

def start_owner_flow(chat_id, session):
    """–ù–∞—á–∞–ª–æ —Ñ–ª–æ—É –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤"""
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üè° –ü—Ä–æ–¥–∞—Ç—å', 'üè† –°–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É'],
            ['üîÑ –ò —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üè† <b>–ú–æ–¥—É–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞</b>\n\n–ß—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å –æ–±—ä–µ–∫—Ç–æ–º?"
    else:
        msg = "üè† <b>Owner Module</b>\n\nWhat are your plans with the property?"
        keyboard['keyboard'] = [
            ['üè° Sell', 'üè† Rent'],
            ['üîÑ Both']
        ]
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_owner_action_selection(chat_id, text, session):
    """–í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üè° –ü—Ä–æ–¥–∞—Ç—å', 'üè° Sell']:
        session['data']['owner_action'] = 'sell'
    elif text in ['üè† –°–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É', 'üè† Rent']:
        session['data']['owner_action'] = 'rent'
    elif text in ['üîÑ –ò —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ', 'üîÑ Both']:
        session['data']['owner_action'] = 'both'
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Choose one of the options"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'owner_property_type'
    
    keyboard = {
        'keyboard': [
            ['üèòÔ∏è –í–∏–ª–ª–∞', 'üè¢ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã'],
            ['üè¨ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üèóÔ∏è –°—Ü–µ–Ω–∞ –æ–±—ä–µ–∫—Ç–∞:"
    else:
        msg = "üèóÔ∏è Property type:"
        keyboard['keyboard'] = [
            ['üèòÔ∏è Villa', 'üè¢ Apartment'],
            ['üè¨ Commercial']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_property_type(chat_id, text, session):
    """–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üèòÔ∏è –í–∏–ª–ª–∞', 'üèòÔ∏è Villa']:
        session['data']['property_type'] = 'villa'
    elif text in ['üè¢ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã', 'üè¢ Apartment']:
        session['data']['property_type'] = 'apartment'
    elif text in ['üè¨ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', 'üè¨ Commercial']:
        session['data']['property_type'] = 'commercial'
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏" if lang == 'ru' else "Choose property type"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'owner_rooms'
    
    keyboard = {
        'keyboard': [
            ['1', '2', '3'],
            ['4', '5+', '–°—Ç—É–¥–∏—è']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üõèÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∏—Ö–∏—Ö –∑–æ–Ω (—Å–ø–∞–ª–µ–Ω)?"
    else:
        msg = "üõèÔ∏è Number of quiet zones (bedrooms)?"
        keyboard['keyboard'] = [
            ['1', '2', '3'],
            ['4', '5+', 'Studio']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_rooms(chat_id, text, session):
    """–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç"""
    session['data']['rooms'] = text
    session['stage'] = 'owner_features'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üåÖ –¢–µ—Ä—Ä–∞—Å–∞', 'üèôÔ∏è –ü–∞–Ω–æ—Ä–∞–º–∞'],
            ['üö™ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –≤—Ö–æ–¥', 'üè° –ü–ª–æ—â–∞–¥—å'],
            ['‚úÖ –í—Å–µ –≤–∞–∂–Ω–æ']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "‚ú® –û—Å–Ω–æ–≤–Ω–æ–π –∞–∫—Ü–µ–Ω—Ç –æ–±—ä–µ–∫—Ç–∞:"
    else:
        msg = "‚ú® Main property highlight:"
        keyboard['keyboard'] = [
            ['üåÖ Terrace', 'üèôÔ∏è Panorama'],
            ['üö™ Private entrance', 'üè° Area'],
            ['‚úÖ All important']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_features(chat_id, text, session):
    """–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞"""
    session['data']['features'] = text
    session['stage'] = 'owner_occupancy'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üè† –ü—É—Å—Ç–æ–π', 'üë• –°–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É'],
            ['üè° –ñ–∏–≤—É —Å–∞–º']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üîç –û–±—ä–µ–∫—Ç —Å–µ–π—á–∞—Å:"
    else:
        msg = "üîç Property status:"
        keyboard['keyboard'] = [
            ['üè† Vacant', 'üë• Rented'],
            ['üè° Owner occupied']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_occupancy(chat_id, text, session):
    """–°—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞"""
    session['data']['occupancy'] = text
    lang = session['data'].get('language', 'ru')
    
    # –ï—Å–ª–∏ —Å–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É - —É—Ç–æ—á–Ω—è–µ–º –¥–µ—Ç–∞–ª–∏
    if text in ['üë• –°–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É', 'üë• Rented']:
        if lang == 'ru':
            msg = "üìÖ –î–æ –∫–∞–∫–æ–≥–æ —Å—Ä–æ–∫–∞ –∞—Ä–µ–Ω–¥–∞? (–Ω–∞–ø—Ä–∏–º–µ—Ä: –¥–æ –º–∞—Ä—Ç–∞ 2025)"
        else:
            msg = "üìÖ Rental contract until? (example: until March 2025)"
        
        send_message(chat_id, msg)
        session['stage'] = 'owner_price_range'
        return
    
    session['stage'] = 'owner_price_range'
    
    if lang == 'ru':
        msg = "üí∞ –î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–π —É—Å—Ç—Ä–æ–∏—Ç?\n\n(–Ω–∞–ø—Ä–∏–º–µ—Ä: 2.5-3M AED –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏–ª–∏ 15-18K AED/–º–µ—Å—è—Ü –¥–ª—è –∞—Ä–µ–Ω–¥—ã)"
    else:
        msg = "üí∞ Price range that works for you?\n\n(example: 2.5-3M AED for sale or 15-18K AED/month for rent)"
    
    send_message(chat_id, msg)

def handle_owner_price_range(chat_id, text, session):
    """–¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω"""
    session['data']['price_range'] = text
    session['stage'] = 'owner_documents'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ', 'üìã –ß–∞—Å—Ç–∏—á–Ω–æ'],
            ['‚ùå –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üìë –î–æ–∫—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã? (Title Deed, Passport, etc.)"
    else:
        msg = "üìë Documents ready? (Title Deed, Passport, etc.)"
        keyboard['keyboard'] = [
            ['‚úÖ All ready', 'üìã Partially'],
            ['‚ùå Need help']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_documents(chat_id, text, session):
    """–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    session['data']['documents'] = text
    lang = session['data'].get('language', 'ru')
    owner_action = session['data'].get('owner_action')
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞—Ä–µ–Ω–¥—ã
    if owner_action in ['rent', 'both']:
        session['stage'] = 'owner_additional_params'
        
        keyboard = {
            'keyboard': [
                ['üõãÔ∏è –° –º–µ–±–µ–ª—å—é', 'üè† –ë–µ–∑ –º–µ–±–µ–ª–∏'],
                ['üîÑ –ù–∞ –≤—ã–±–æ—Ä –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        if lang == 'ru':
            msg = "ü™ë –ú–µ–±–µ–ª—å –≤ –æ–±—ä–µ–∫—Ç–µ:"
        else:
            msg = "ü™ë Furniture in property:"
            keyboard['keyboard'] = [
                ['üõãÔ∏è Furnished', 'üè† Unfurnished'],
                ['üîÑ Tenant choice']
            ]
        
        send_message(chat_id, msg, keyboard)
        return
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ AI –∞–Ω–∞–ª–∏–∑—É –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
    session['stage'] = 'contact_method_select'
    provide_ai_signal(chat_id, session)

def handle_owner_additional_params(chat_id, text, session):
    """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞—Ä–µ–Ω–¥—ã"""
    session['data']['furniture'] = text
    session['stage'] = 'contact_method_select'
    
    # AI –∞–Ω–∞–ª–∏–∑ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä—ã–Ω–∫—É
    provide_ai_signal(chat_id, session)

def provide_ai_signal(chat_id, session):
    """AI —Å–∏–≥–Ω–∞–ª –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä—ã–Ω–∫—É"""
    lang = session['data'].get('language', 'ru')
    owner_action = session['data'].get('owner_action')
    documents = session['data'].get('documents')
    
    if lang == 'ru':
        if documents in ['‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ', '‚úÖ All ready']:
            signal = "üü¢ <b>–ß–µ—Å—Ç–Ω—ã–π —Å–∏–≥–Ω–∞–ª:</b> –º–æ–∂–Ω–æ –∏–¥—Ç–∏ –≤ —Ä—ã–Ω–æ–∫ —Å—Ä–∞–∑—É.\n\n"
            signal += "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã\n"
            signal += "‚úÖ –†—ã–Ω–æ–∫ –∞–∫—Ç–∏–≤–µ–Ω –¥–ª—è –≤–∞—à–µ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞\n"
            signal += "‚ö° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ + –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–µ–Ω–∞ = –±—ã—Å—Ç—Ä–∞—è —Å–¥–µ–ª–∫–∞"
        else:
            signal = "üü° <b>–ß–µ—Å—Ç–Ω—ã–π —Å–∏–≥–Ω–∞–ª:</b> –ª—É—á—à–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è.\n\n"
            signal += "üìã –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç\n"
            signal += "üì∏ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ\n"
            signal += "üõ†Ô∏è –í–æ–∑–º–æ–∂–µ–Ω –ª–µ–≥–∫–∏–π refresh –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞\n"
            signal += "üìà –≠—Ç–æ –ø–æ–≤—ã—Å–∏—Ç —Ü–µ–Ω—É –Ω–∞ 3-7%"
        
        signal += f"\n\nüéØ –ì–æ—Ç–æ–≤ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –±—Ä–æ–∫–µ—Ä—É –¥–ª—è {owner_action}?"
    else:
        if documents in ['‚úÖ All ready']:
            signal = "üü¢ <b>Honest signal:</b> ready for market now.\n\n"
            signal += "‚úÖ Documents ready\n"
            signal += "‚úÖ Market is active for your segment\n"
            signal += "‚ö° Recommendation: quality photos + right price = quick deal"
        else:
            signal = "üü° <b>Honest signal:</b> better to prepare.\n\n"
            signal += "üìã Complete documentation\n"
            signal += "üì∏ Professional photos\n" 
            signal += "üõ†Ô∏è Light interior refresh possible\n"
            signal += "üìà This increases price by 3-7%"
        
        signal += f"\n\nüéØ Ready to pass profile to broker for {owner_action}?"
    
    send_message(chat_id, signal, parse_mode='HTML')
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–±–æ—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    start_contact_flow(chat_id, session)

# ==================== –ú–û–î–£–õ–¨ –ö–û–ù–¢–ê–ö–¢–û–í ====================

def start_contact_flow(chat_id, session):
    """–ù–∞—áalo —Å–±–æ—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üì± –¢–µ–ª–µ—Ñ–æ–Ω', 'üí¨ WhatsApp'],
            ['üìß Email', 'üì≤ Telegram']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üìû <b>–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —É–¥–æ–±–Ω–µ–µ?</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±:"
    else:
        msg = "üìû <b>How to contact you?</b>\n\nChoose preferred method:"
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_contact_method_selection(chat_id, text, session):
    """–í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ —Å–≤—è–∑–∏"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üì± –¢–µ–ª–µ—Ñ–æ–Ω', 'üí¨ WhatsApp', 'üì± Phone', 'üí¨ WhatsApp']:
        session['data']['contact_method'] = 'phone'
        session['stage'] = 'phone_input'
        
        keyboard = {
            'keyboard': [
                [{'text': 'üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º', 'request_contact': True}],
                ['‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        if lang == 'ru':
            msg = "üì± <b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>\n\n–ú–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é:"
        else:
            msg = "üì± <b>Phone Number</b>\n\nYou can share your number or enter manually:"
            keyboard['keyboard'] = [
                [{'text': 'üì± Share number', 'request_contact': True}],
                ['‚úçÔ∏è Enter manually']
            ]
        
        send_message(chat_id, msg, keyboard, parse_mode='HTML')
        
    elif text in ['üìß Email']:
        session['data']['contact_method'] = 'email'
        session['stage'] = 'email_input'
        
        if lang == 'ru':
            msg = "üìß <b>Email –∞–¥—Ä–µ—Å</b>\n\n–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –ø–ª–∞–Ω–æ–≤:"
        else:
            msg = "üìß <b>Email Address</b>\n\nEnter email for documents and plans:"
        
        send_message(chat_id, msg, parse_mode='HTML')
        
    elif text in ['üì≤ Telegram']:
        session['data']['contact_method'] = 'telegram'
        session['stage'] = 'telegram_input'
        
        if lang == 'ru':
            msg = "üì≤ <b>Telegram</b>\n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à @username –≤ Telegram:"
        else:
            msg = "üì≤ <b>Telegram</b>\n\nEnter your @username in Telegram:"
        
        send_message(chat_i
    clean_phone = re.sub(r'[^\d+]', '', text)
    
    if re.match(phone_pattern, clean_phone):
        session['data']['phone'] = clean_phone
        session['stage'] = 'email_input'
        
        if lang == 'ru':
            msg = f"‚úÖ –¢–µ–ª–µ—Ñ–æ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {clean_phone}\n\nüìß <b>Email (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</b>\n\n–û—Å—Ç–∞–≤—å—Ç–µ email –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':"
        else:
            msg = f"‚úÖ Phone saved: {clean_phone}\n\nüìß <b>Email (optional)</b>\n\nLeave email for documents or press 'Skip':"
        
        keyboard = {
            'keyboard': [['‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å' if lang == 'ru' else '‚è≠Ô∏è Skip']],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        send_message(chat_id, msg, keyboard, parse_mode='HTML')
    else:
        if lang == 'ru':
            msg = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: +971501234567"
        else:
            msg = "‚ùå Invalid phone format.\n\nPlease enter like: +971501234567"
        send_message(chat_id, msg)

def handle_email_input(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ email"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', '‚è≠Ô∏è Skip']:
        session['data']['email'] = None
        session['stage'] = 'contact_confirmation'
        show_contact_confirmation(chat_id, session)
        return
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è email
    email_pattern = r'^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}d, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º")

def handle_start(chat_id):
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã - –≤—ã–±–æ—Ä —è–∑—ã–∫–∞"""
    user_sessions[chat_id] = {'stage': 'language_select', 'data': {}}
    
    keyboard = {
        'keyboard': [
            ['–†—É—Å—Å–∫–∏–π', 'English']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    text = "üè† <b>UAE Property Navigator</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language:"
    send_message(chat_id, text, keyboard, parse_mode='HTML')

def handle_language_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    if '–†—É—Å—Å–∫–∏–π' in text:
        session['data']['language'] = 'ru'
        session['stage'] = 'role_select'
        
        keyboard = {
            'keyboard': [
                ['üè† –ñ–∏—Ç—å', 'üìà –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å'],
                ['üîÑ –ü—Ä–æ–¥–∞—Ç—å/–°–¥–∞—Ç—å', 'üéØ –°–º–µ—à–∞–Ω–Ω—ã–π']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        name = session['data'].get('name', '–¥—Ä—É–≥')
        text_msg = f"–ü—Ä–∏–≤–µ—Ç, {name}. –ò–≤–∞–Ω, —Ü–∏—Ñ—Ä–æ–≤–æ–π –Ω–∞–ø–∞—Ä–Ω–∏–∫ –≤ —ç—Ñ–∏—Ä–µ.\n\n–•–æ—á—É —É—Å–ª—ã—à–∞—Ç—å —Ç–≤–æ–π —Ç–µ–∫—É—â–∏–π —Ñ–æ–∫—É—Å: –∂–∏—Ç—å, –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–∫—Ç–∏–≤–æ–º?"
        
        send_message(chat_id, text_msg, keyboard)
        
    elif 'English' in text:
        session['data']['language'] = 'en'
        session['stage'] = 'role_select'
        
        keyboard = {
            'keyboard': [
                ['üè† Live', 'üìà Invest'],
                ['üîÑ Sell/Rent', 'üéØ Mixed']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        name = session['data'].get('name', 'friend')
        text_msg = f"Hi, {name}. Ivan, digital partner online.\n\nWhat's your current focus: live, invest, manage property?"
        
        send_message(chat_id, text_msg, keyboard)
    else:
        send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")

def handle_role_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    lang = session['data'].get('language', 'ru')
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å
    if text in ['üè† –ñ–∏—Ç—å', 'üè† Live']:
        session['data']['role'] = 'live'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    elif text in ['üìà –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å', 'üìà Invest']:
        session['data']['role'] = 'invest'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    elif text in ['üîÑ –ü—Ä–æ–¥–∞—Ç—å/–°–¥–∞—Ç—å', 'üîÑ Sell/Rent']:
        session['data']['role'] = 'owner'
        session['stage'] = 'owner_action_select'
        start_owner_flow(chat_id, session)
    elif text in ['üéØ –°–º–µ—à–∞–Ω–Ω—ã–π', 'üéØ Mixed']:
        session['data']['role'] = 'mixed'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    else:
        msg = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Please choose one of the suggested options"
        send_message(chat_id, msg)

def ask_budget(chat_id, session):
    """–ó–∞–ø—Ä–æ—Å –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π/–∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤"""
    lang = session['data'].get('language', 'ru')
    
    if lang == 'ru':
        msg = "–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫–æ–≤ –æ—Ä–∏–µ–Ω—Ç–∏—Ä –ø–æ –±—é–¥–∂–µ—Ç—É?\n\nüí∞ –ù–∞–ø—Ä–∏–º–µ—Ä: 2-3M AED, 1.5M AED, 5M+ AED"
    else:
        msg = "Great! What's your budget range?\n\nüí∞ For example: 2-3M AED, 1.5M AED, 5M+ AED"
    
    send_message(chat_id, msg)

def handle_budget_input(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –±—é–¥–∂–µ—Ç–∞"""
    lang = session['data'].get('language', 'ru')
    session['data']['budget'] = text
    session['stage'] = 'priority_select'
    
    keyboard = {
        'keyboard': [
            ['üåä –£—Ç—Ä–æ —É –≤–æ–¥—ã', 'üèôÔ∏è –î–æ—Å—Ç—É–ø –∫ —Ü–µ–Ω—Ç—Ä—É'] if lang == 'ru' else ['üåä Water morning', 'üèôÔ∏è City access'],
            ['‚öñÔ∏è –ë–∞–ª–∞–Ω—Å'] if lang == 'ru' else ['‚öñÔ∏è Balance']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = f"–ë—é–¥–∂–µ—Ç {text} –ø—Ä–∏–Ω—è—Ç!\n\nü§î –ß—Ç–æ –≤–∞–∂–Ω–µ–µ: —É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ —É –≤–æ–¥—ã –∏–ª–∏ –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –¥–µ–ª–æ–≤–æ–º—É —Ü–µ–Ω—Ç—Ä—É?"
    else:
        msg = f"Budget {text} noted!\n\nü§î What's more important: peaceful morning by water or quick access to business center?"
    
    send_message(chat_id, msg, keyboard)

def handle_priority_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üåä –£—Ç—Ä–æ —É –≤–æ–¥—ã', 'üåä Water morning']:
        session['data']['priority'] = 'water'
    elif text in ['üèôÔ∏è –î–æ—Å—Ç—É–ø –∫ —Ü–µ–Ω—Ç—Ä—É', 'üèôÔ∏è City access']:
        session['data']['priority'] = 'center'
    elif text in ['‚öñÔ∏è –ë–∞–ª–∞–Ω—Å', '‚öñÔ∏è Balance']:
        session['data']['priority'] = 'balance'
    else:
        msg = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Please choose one of the options"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'show_locations'
    show_location_pulse(chat_id, session)

def show_location_pulse(chat_id, session):
    """–ü–æ–∫–∞–∑ –ø—É–ª—å—Å–∞ –ª–æ–∫–∞—Ü–∏–π"""
    lang = session['data'].get('language', 'ru')
    priority = session['data'].get('priority')
    role = session['data'].get('role')
    
    if lang == 'ru':
        msg = "üåä <b>–ü—É–ª—å—Å –ª–æ–∫–∞—Ü–∏–π –ø–æ–¥ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
        
        if priority == 'water' or priority == 'balance':
            msg += "üèùÔ∏è <b>Palm Jumeirah</b>\n"
            msg += "–†–∞–Ω–Ω–∏–π —Å–≤–µ—Ç, —á–∞—Å—Ç–Ω—ã–π —Ä–∏—Ç—É–∞–ª —É—Ç—Ä–∞\n"
            msg += "–Ø–∫–æ—Ä—è: —Ç–∏—à–∏–Ω–∞ —Ñ—Ä–æ–Ω—Ç–∞, –ø–∞–Ω–æ—Ä–∞–º–∞\n\n"
            
            msg += "üåä <b>Dubai Marina</b>\n"
            msg += "–í–æ–¥–Ω—ã–π —Ä–∏—Ç–º, –¥–∏–Ω–∞–º–∏–∫–∞ —è—Ö—Ç\n"
            msg += "–ê—Ç–º–æ—Å—Ñ–µ—Ä–∞: –∞–∫—Ç–∏–≤–Ω–∞—è –∂–∏–∑–Ω—å —É –≤–æ–¥—ã\n\n"
        
        if priority == 'center' or priority == 'balance':
            msg += "üèôÔ∏è <b>Downtown Dubai</b>\n"
            msg += "–≠–Ω–µ—Ä–≥–∏—è —Ü–µ–Ω—Ç—Ä–∞, –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ø–∞–Ω–æ—Ä–∞–º–∞\n"
            msg += "–§–æ–∫—É—Å: –¥–∏–Ω–∞–º–∏–∫–∞ –≥–æ—Ä–æ–¥–∞, –ø—Ä–µ—Å—Ç–∏–∂ –≤—ã—Å–æ—Ç—ã\n\n"
            
            msg += "üèõÔ∏è <b>Business Bay</b>\n"
            msg += "–ë–∏–∑–Ω–µ—Å-–ø—É–ª—å—Å, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Ñ–æ–∫—É—Å\n"
            msg += "–ü—Ä–æ—Ñ–∏–ª—å: –¥–µ–ª–æ–≤–æ–π —Ü–µ–Ω—Ç—Ä, –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å\n\n"
        
        keyboard = {
            'keyboard': [
                ['üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –±—Ä–æ–∫–µ—Ä–æ–º'],
                ['üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ']
            ],
            'resize_keyboard': True
        }
        
        msg += "üéØ <b>–ì–æ—Ç–æ–≤ –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É —Ä–∞–∑–±–æ—Ä—É?</b>"
        
    else:
        msg = "üåä <b>Location Pulse for Your Profile</b>\n\n"
        
        if priority == 'water' or priority == 'balance':
            msg += "üèùÔ∏è <b>Palm Jumeirah</b>\n"
            msg += "Early light, private morning ritual\n"
            msg += "Anchors: front serenity, panorama\n\n"
            
            msg += "üåä <b>Dubai Marina</b>\n"
            msg += "Water rhythm, yacht dynamics\n"
            msg += "Atmosphere: active waterfront life\n\n"
        
        if priority == 'center' or priority == 'balance':
            msg += "üèôÔ∏è <b>Downtown Dubai</b>\n"
            msg += "City energy, vertical panorama\n"
            msg += "Focus: urban dynamics, height prestige\n\n"
            
            msg += "üèõÔ∏è <b>Business Bay</b>\n"
            msg += "Business pulse, investment focus\n"
            msg += "Profile: business center, liquidity\n\n"
        
        keyboard = {
            'keyboard': [
                ['üìû Contact broker'],
                ['üîÑ Start over']
            ],
            'resize_keyboard': True
        }
        
        msg += "üéØ <b>Ready for detailed analysis?</b>"
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_location_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –±—Ä–æ–∫–µ—Ä–æ–º', 'üìû Contact broker']:
        session['stage'] = 'contact_method_select'
        start_contact_flow(chat_id, session)
    elif text in ['üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', 'üîÑ Start over']:
        handle_start(chat_id)
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö" if lang == 'ru' else "Choose an action from the suggested options"
        send_message(chat_id, msg)

# ==================== –ú–û–î–£–õ–¨ –í–õ–ê–î–ï–õ–ï–¶ (–ü–†–û–î–ê–¢–¨/–°–î–ê–¢–¨) ====================

def start_owner_flow(chat_id, session):
    """–ù–∞—á–∞–ª–æ —Ñ–ª–æ—É –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤"""
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üè° –ü—Ä–æ–¥–∞—Ç—å', 'üè† –°–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É'],
            ['üîÑ –ò —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üè† <b>–ú–æ–¥—É–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞</b>\n\n–ß—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å –æ–±—ä–µ–∫—Ç–æ–º?"
    else:
        msg = "üè† <b>Owner Module</b>\n\nWhat are your plans with the property?"
        keyboard['keyboard'] = [
            ['üè° Sell', 'üè† Rent'],
            ['üîÑ Both']
        ]
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_owner_action_selection(chat_id, text, session):
    """–í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üè° –ü—Ä–æ–¥–∞—Ç—å', 'üè° Sell']:
        session['data']['owner_action'] = 'sell'
    elif text in ['üè† –°–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É', 'üè† Rent']:
        session['data']['owner_action'] = 'rent'
    elif text in ['üîÑ –ò —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ', 'üîÑ Both']:
        session['data']['owner_action'] = 'both'
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Choose one of the options"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'owner_property_type'
    
    keyboard = {
        'keyboard': [
            ['üèòÔ∏è –í–∏–ª–ª–∞', 'üè¢ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã'],
            ['üè¨ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üèóÔ∏è –°—Ü–µ–Ω–∞ –æ–±—ä–µ–∫—Ç–∞:"
    else:
        msg = "üèóÔ∏è Property type:"
        keyboard['keyboard'] = [
            ['üèòÔ∏è Villa', 'üè¢ Apartment'],
            ['üè¨ Commercial']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_property_type(chat_id, text, session):
    """–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üèòÔ∏è –í–∏–ª–ª–∞', 'üèòÔ∏è Villa']:
        session['data']['property_type'] = 'villa'
    elif text in ['üè¢ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã', 'üè¢ Apartment']:
        session['data']['property_type'] = 'apartment'
    elif text in ['üè¨ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', 'üè¨ Commercial']:
        session['data']['property_type'] = 'commercial'
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏" if lang == 'ru' else "Choose property type"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'owner_rooms'
    
    keyboard = {
        'keyboard': [
            ['1', '2', '3'],
            ['4', '5+', '–°—Ç—É–¥–∏—è']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üõèÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∏—Ö–∏—Ö –∑–æ–Ω (—Å–ø–∞–ª–µ–Ω)?"
    else:
        msg = "üõèÔ∏è Number of quiet zones (bedrooms)?"
        keyboard['keyboard'] = [
            ['1', '2', '3'],
            ['4', '5+', 'Studio']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_rooms(chat_id, text, session):
    """–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç"""
    session['data']['rooms'] = text
    session['stage'] = 'owner_features'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üåÖ –¢–µ—Ä—Ä–∞—Å–∞', 'üèôÔ∏è –ü–∞–Ω–æ—Ä–∞–º–∞'],
            ['üö™ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –≤—Ö–æ–¥', 'üè° –ü–ª–æ—â–∞–¥—å'],
            ['‚úÖ –í—Å–µ –≤–∞–∂–Ω–æ']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "‚ú® –û—Å–Ω–æ–≤–Ω–æ–π –∞–∫—Ü–µ–Ω—Ç –æ–±—ä–µ–∫—Ç–∞:"
    else:
        msg = "‚ú® Main property highlight:"
        keyboard['keyboard'] = [
            ['üåÖ Terrace', 'üèôÔ∏è Panorama'],
            ['üö™ Private entrance', 'üè° Area'],
            ['‚úÖ All important']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_features(chat_id, text, session):
    """–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞"""
    session['data']['features'] = text
    session['stage'] = 'owner_occupancy'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üè† –ü—É—Å—Ç–æ–π', 'üë• –°–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É'],
            ['üè° –ñ–∏–≤—É —Å–∞–º']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üîç –û–±—ä–µ–∫—Ç —Å–µ–π—á–∞—Å:"
    else:
        msg = "üîç Property status:"
        keyboard['keyboard'] = [
            ['üè† Vacant', 'üë• Rented'],
            ['üè° Owner occupied']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_occupancy(chat_id, text, session):
    """–°—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞"""
    session['data']['occupancy'] = text
    lang = session['data'].get('language', 'ru')
    
    # –ï—Å–ª–∏ —Å–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É - —É—Ç–æ—á–Ω—è–µ–º –¥–µ—Ç–∞–ª–∏
    if text in ['üë• –°–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É', 'üë• Rented']:
        if lang == 'ru':
            msg = "üìÖ –î–æ –∫–∞–∫–æ–≥–æ —Å—Ä–æ–∫–∞ –∞—Ä–µ–Ω–¥–∞? (–Ω–∞–ø—Ä–∏–º–µ—Ä: –¥–æ –º–∞—Ä—Ç–∞ 2025)"
        else:
            msg = "üìÖ Rental contract until? (example: until March 2025)"
        
        send_message(chat_id, msg)
        session['stage'] = 'owner_price_range'
        return
    
    session['stage'] = 'owner_price_range'
    
    if lang == 'ru':
        msg = "üí∞ –î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–π —É—Å—Ç—Ä–æ–∏—Ç?\n\n(–Ω–∞–ø—Ä–∏–º–µ—Ä: 2.5-3M AED –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏–ª–∏ 15-18K AED/–º–µ—Å—è—Ü –¥–ª—è –∞—Ä–µ–Ω–¥—ã)"
    else:
        msg = "üí∞ Price range that works for you?\n\n(example: 2.5-3M AED for sale or 15-18K AED/month for rent)"
    
    send_message(chat_id, msg)

def handle_owner_price_range(chat_id, text, session):
    """–¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω"""
    session['data']['price_range'] = text
    session['stage'] = 'owner_documents'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ', 'üìã –ß–∞—Å—Ç–∏—á–Ω–æ'],
            ['‚ùå –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üìë –î–æ–∫—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã? (Title Deed, Passport, etc.)"
    else:
        msg = "üìë Documents ready? (Title Deed, Passport, etc.)"
        keyboard['keyboard'] = [
            ['‚úÖ All ready', 'üìã Partially'],
            ['‚ùå Need help']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_documents(chat_id, text, session):
    """–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    session['data']['documents'] = text
    lang = session['data'].get('language', 'ru')
    owner_action = session['data'].get('owner_action')
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞—Ä–µ–Ω–¥—ã
    if owner_action in ['rent', 'both']:
        session['stage'] = 'owner_additional_params'
        
        keyboard = {
            'keyboard': [
                ['üõãÔ∏è –° –º–µ–±–µ–ª—å—é', 'üè† –ë–µ–∑ –º–µ–±–µ–ª–∏'],
                ['üîÑ –ù–∞ –≤—ã–±–æ—Ä –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        if lang == 'ru':
            msg = "ü™ë –ú–µ–±–µ–ª—å –≤ –æ–±—ä–µ–∫—Ç–µ:"
        else:
            msg = "ü™ë Furniture in property:"
            keyboard['keyboard'] = [
                ['üõãÔ∏è Furnished', 'üè† Unfurnished'],
                ['üîÑ Tenant choice']
            ]
        
        send_message(chat_id, msg, keyboard)
        return
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ AI –∞–Ω–∞–ª–∏–∑—É –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
    session['stage'] = 'contact_method_select'
    provide_ai_signal(chat_id, session)

def handle_owner_additional_params(chat_id, text, session):
    """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞—Ä–µ–Ω–¥—ã"""
    session['data']['furniture'] = text
    session['stage'] = 'contact_method_select'
    
    # AI –∞–Ω–∞–ª–∏–∑ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä—ã–Ω–∫—É
    provide_ai_signal(chat_id, session)

def provide_ai_signal(chat_id, session):
    """AI —Å–∏–≥–Ω–∞–ª –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä—ã–Ω–∫—É"""
    lang = session['data'].get('language', 'ru')
    owner_action = session['data'].get('owner_action')
    documents = session['data'].get('documents')
    
    if lang == 'ru':
        if documents in ['‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ', '‚úÖ All ready']:
            signal = "üü¢ <b>–ß–µ—Å—Ç–Ω—ã–π —Å–∏–≥–Ω–∞–ª:</b> –º–æ–∂–Ω–æ –∏–¥—Ç–∏ –≤ —Ä—ã–Ω–æ–∫ —Å—Ä–∞–∑—É.\n\n"
            signal += "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã\n"
            signal += "‚úÖ –†—ã–Ω–æ–∫ –∞–∫—Ç–∏–≤–µ–Ω –¥–ª—è –≤–∞—à–µ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞\n"
            signal += "‚ö° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ + –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–µ–Ω–∞ = –±—ã—Å—Ç—Ä–∞—è —Å–¥–µ–ª–∫–∞"
        else:
            signal = "üü° <b>–ß–µ—Å—Ç–Ω—ã–π —Å–∏–≥–Ω–∞–ª:</b> –ª—É—á—à–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è.\n\n"
            signal += "üìã –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç\n"
            signal += "üì∏ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ\n"
            signal += "üõ†Ô∏è –í–æ–∑–º–æ–∂–µ–Ω –ª–µ–≥–∫–∏–π refresh –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞\n"
            signal += "üìà –≠—Ç–æ –ø–æ–≤—ã—Å–∏—Ç —Ü–µ–Ω—É –Ω–∞ 3-7%"
        
        signal += f"\n\nüéØ –ì–æ—Ç–æ–≤ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –±—Ä–æ–∫–µ—Ä—É –¥–ª—è {owner_action}?"
    else:
        if documents in ['‚úÖ All ready']:
            signal = "üü¢ <b>Honest signal:</b> ready for market now.\n\n"
            signal += "‚úÖ Documents ready\n"
            signal += "‚úÖ Market is active for your segment\n"
            signal += "‚ö° Recommendation: quality photos + right price = quick deal"
        else:
            signal = "üü° <b>Honest signal:</b> better to prepare.\n\n"
            signal += "üìã Complete documentation\n"
            signal += "üì∏ Professional photos\n" 
            signal += "üõ†Ô∏è Light interior refresh possible\n"
            signal += "üìà This increases price by 3-7%"
        
        signal += f"\n\nüéØ Ready to pass profile to broker for {owner_action}?"
    
    send_message(chat_id, signal, parse_mode='HTML')
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–±–æ—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    start_contact_flow(chat_id, session)

# ==================== –ú–û–î–£–õ–¨ –ö–û–ù–¢–ê–ö–¢–û–í ====================

def start_contact_flow(chat_id, session):
    """–ù–∞—áalo —Å–±–æ—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üì± –¢–µ–ª–µ—Ñ–æ–Ω', 'üí¨ WhatsApp'],
            ['üìß Email', 'üì≤ Telegram']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üìû <b>–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —É–¥–æ–±–Ω–µ–µ?</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±:"
    else:
        msg = "üìû <b>How to contact you?</b>\n\nChoose preferred method:"
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_contact_method_selection(chat_id, text, session):
    """–í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ —Å–≤—è–∑–∏"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üì± –¢–µ–ª–µ—Ñ–æ–Ω', 'üí¨ WhatsApp', 'üì± Phone', 'üí¨ WhatsApp']:
        session['data']['contact_method'] = 'phone'
        session['stage'] = 'phone_input'
        
        keyboard = {
            'keyboard': [
                [{'text': 'üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º', 'request_contact': True}],
                ['‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        if lang == 'ru':
            msg = "üì± <b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>\n\n–ú–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é:"
        else:
            msg = "üì± <b>Phone Number</b>\n\nYou can share your number or enter manually:"
            keyboard['keyboard'] = [
                [{'text': 'üì± Share number', 'request_contact': True}],
                ['‚úçÔ∏è Enter manually']
            ]
        
        send_message(chat_id, msg, keyboard, parse_mode='HTML')
        
    elif text in ['üìß Email']:
        session['data']['contact_method'] = 'email'
        session['stage'] = 'email_input'
        
        if lang == 'ru':
            msg = "üìß <b>Email –∞–¥—Ä–µ—Å</b>\n\n–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –ø–ª–∞–Ω–æ–≤:"
        else:
            msg = "üìß <b>Email Address</b>\n\nEnter email for documents and plans:"
        
        send_message(chat_id, msg, parse_mode='HTML')
        
    elif text in ['üì≤ Telegram']:
        session['data']['contact_method'] = 'telegram'
        session['stage'] = 'telegram_input'
        
        if lang == 'ru':
            msg = "üì≤ <b>Telegram</b>\n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à @username –≤ Telegram:"
        else:
            msg = "üì≤ <b>Telegram</b>\n\nEnter your @username in Telegram:"
        
        send_message(chat_i
    
    if re.match(email_pattern, text):
        session['data']['email'] = text
        session['stage'] = 'contact_confirmation'
        show_contact_confirmation(chat_id, session)
    else:
        if lang == 'ru':
            msg = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email.\n\n–ü—Ä–∏–º–µ—Ä: name@mail.com"
        else:
            msg = "‚ùå Invalid email format.\n\nExample: name@mail.com"
        send_message(chat_id, msg)

def handle_telegram_input(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ Telegram username"""
    lang = session['data'].get('language', 'ru')
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è Telegram username
    tg_pattern = r'^@[A-Za-z0-9_]{5,32}d, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º")

def handle_start(chat_id):
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã - –≤—ã–±–æ—Ä —è–∑—ã–∫–∞"""
    user_sessions[chat_id] = {'stage': 'language_select', 'data': {}}
    
    keyboard = {
        'keyboard': [
            ['–†—É—Å—Å–∫–∏–π', 'English']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    text = "üè† <b>UAE Property Navigator</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language:"
    send_message(chat_id, text, keyboard, parse_mode='HTML')

def handle_language_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    if '–†—É—Å—Å–∫–∏–π' in text:
        session['data']['language'] = 'ru'
        session['stage'] = 'role_select'
        
        keyboard = {
            'keyboard': [
                ['üè† –ñ–∏—Ç—å', 'üìà –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å'],
                ['üîÑ –ü—Ä–æ–¥–∞—Ç—å/–°–¥–∞—Ç—å', 'üéØ –°–º–µ—à–∞–Ω–Ω—ã–π']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        name = session['data'].get('name', '–¥—Ä—É–≥')
        text_msg = f"–ü—Ä–∏–≤–µ—Ç, {name}. –ò–≤–∞–Ω, —Ü–∏—Ñ—Ä–æ–≤–æ–π –Ω–∞–ø–∞—Ä–Ω–∏–∫ –≤ —ç—Ñ–∏—Ä–µ.\n\n–•–æ—á—É —É—Å–ª—ã—à–∞—Ç—å —Ç–≤–æ–π —Ç–µ–∫—É—â–∏–π —Ñ–æ–∫—É—Å: –∂–∏—Ç—å, –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–∫—Ç–∏–≤–æ–º?"
        
        send_message(chat_id, text_msg, keyboard)
        
    elif 'English' in text:
        session['data']['language'] = 'en'
        session['stage'] = 'role_select'
        
        keyboard = {
            'keyboard': [
                ['üè† Live', 'üìà Invest'],
                ['üîÑ Sell/Rent', 'üéØ Mixed']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        name = session['data'].get('name', 'friend')
        text_msg = f"Hi, {name}. Ivan, digital partner online.\n\nWhat's your current focus: live, invest, manage property?"
        
        send_message(chat_id, text_msg, keyboard)
    else:
        send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")

def handle_role_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    lang = session['data'].get('language', 'ru')
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å
    if text in ['üè† –ñ–∏—Ç—å', 'üè† Live']:
        session['data']['role'] = 'live'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    elif text in ['üìà –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å', 'üìà Invest']:
        session['data']['role'] = 'invest'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    elif text in ['üîÑ –ü—Ä–æ–¥–∞—Ç—å/–°–¥–∞—Ç—å', 'üîÑ Sell/Rent']:
        session['data']['role'] = 'owner'
        session['stage'] = 'owner_action_select'
        start_owner_flow(chat_id, session)
    elif text in ['üéØ –°–º–µ—à–∞–Ω–Ω—ã–π', 'üéØ Mixed']:
        session['data']['role'] = 'mixed'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    else:
        msg = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Please choose one of the suggested options"
        send_message(chat_id, msg)

def ask_budget(chat_id, session):
    """–ó–∞–ø—Ä–æ—Å –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π/–∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤"""
    lang = session['data'].get('language', 'ru')
    
    if lang == 'ru':
        msg = "–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫–æ–≤ –æ—Ä–∏–µ–Ω—Ç–∏—Ä –ø–æ –±—é–¥–∂–µ—Ç—É?\n\nüí∞ –ù–∞–ø—Ä–∏–º–µ—Ä: 2-3M AED, 1.5M AED, 5M+ AED"
    else:
        msg = "Great! What's your budget range?\n\nüí∞ For example: 2-3M AED, 1.5M AED, 5M+ AED"
    
    send_message(chat_id, msg)

def handle_budget_input(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –±—é–¥–∂–µ—Ç–∞"""
    lang = session['data'].get('language', 'ru')
    session['data']['budget'] = text
    session['stage'] = 'priority_select'
    
    keyboard = {
        'keyboard': [
            ['üåä –£—Ç—Ä–æ —É –≤–æ–¥—ã', 'üèôÔ∏è –î–æ—Å—Ç—É–ø –∫ —Ü–µ–Ω—Ç—Ä—É'] if lang == 'ru' else ['üåä Water morning', 'üèôÔ∏è City access'],
            ['‚öñÔ∏è –ë–∞–ª–∞–Ω—Å'] if lang == 'ru' else ['‚öñÔ∏è Balance']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = f"–ë—é–¥–∂–µ—Ç {text} –ø—Ä–∏–Ω—è—Ç!\n\nü§î –ß—Ç–æ –≤–∞–∂–Ω–µ–µ: —É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ —É –≤–æ–¥—ã –∏–ª–∏ –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –¥–µ–ª–æ–≤–æ–º—É —Ü–µ–Ω—Ç—Ä—É?"
    else:
        msg = f"Budget {text} noted!\n\nü§î What's more important: peaceful morning by water or quick access to business center?"
    
    send_message(chat_id, msg, keyboard)

def handle_priority_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üåä –£—Ç—Ä–æ —É –≤–æ–¥—ã', 'üåä Water morning']:
        session['data']['priority'] = 'water'
    elif text in ['üèôÔ∏è –î–æ—Å—Ç—É–ø –∫ —Ü–µ–Ω—Ç—Ä—É', 'üèôÔ∏è City access']:
        session['data']['priority'] = 'center'
    elif text in ['‚öñÔ∏è –ë–∞–ª–∞–Ω—Å', '‚öñÔ∏è Balance']:
        session['data']['priority'] = 'balance'
    else:
        msg = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Please choose one of the options"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'show_locations'
    show_location_pulse(chat_id, session)

def show_location_pulse(chat_id, session):
    """–ü–æ–∫–∞–∑ –ø—É–ª—å—Å–∞ –ª–æ–∫–∞—Ü–∏–π"""
    lang = session['data'].get('language', 'ru')
    priority = session['data'].get('priority')
    role = session['data'].get('role')
    
    if lang == 'ru':
        msg = "üåä <b>–ü—É–ª—å—Å –ª–æ–∫–∞—Ü–∏–π –ø–æ–¥ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
        
        if priority == 'water' or priority == 'balance':
            msg += "üèùÔ∏è <b>Palm Jumeirah</b>\n"
            msg += "–†–∞–Ω–Ω–∏–π —Å–≤–µ—Ç, —á–∞—Å—Ç–Ω—ã–π —Ä–∏—Ç—É–∞–ª —É—Ç—Ä–∞\n"
            msg += "–Ø–∫–æ—Ä—è: —Ç–∏—à–∏–Ω–∞ —Ñ—Ä–æ–Ω—Ç–∞, –ø–∞–Ω–æ—Ä–∞–º–∞\n\n"
            
            msg += "üåä <b>Dubai Marina</b>\n"
            msg += "–í–æ–¥–Ω—ã–π —Ä–∏—Ç–º, –¥–∏–Ω–∞–º–∏–∫–∞ —è—Ö—Ç\n"
            msg += "–ê—Ç–º–æ—Å—Ñ–µ—Ä–∞: –∞–∫—Ç–∏–≤–Ω–∞—è –∂–∏–∑–Ω—å —É –≤–æ–¥—ã\n\n"
        
        if priority == 'center' or priority == 'balance':
            msg += "üèôÔ∏è <b>Downtown Dubai</b>\n"
            msg += "–≠–Ω–µ—Ä–≥–∏—è —Ü–µ–Ω—Ç—Ä–∞, –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ø–∞–Ω–æ—Ä–∞–º–∞\n"
            msg += "–§–æ–∫—É—Å: –¥–∏–Ω–∞–º–∏–∫–∞ –≥–æ—Ä–æ–¥–∞, –ø—Ä–µ—Å—Ç–∏–∂ –≤—ã—Å–æ—Ç—ã\n\n"
            
            msg += "üèõÔ∏è <b>Business Bay</b>\n"
            msg += "–ë–∏–∑–Ω–µ—Å-–ø—É–ª—å—Å, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Ñ–æ–∫—É—Å\n"
            msg += "–ü—Ä–æ—Ñ–∏–ª—å: –¥–µ–ª–æ–≤–æ–π —Ü–µ–Ω—Ç—Ä, –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å\n\n"
        
        keyboard = {
            'keyboard': [
                ['üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –±—Ä–æ–∫–µ—Ä–æ–º'],
                ['üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ']
            ],
            'resize_keyboard': True
        }
        
        msg += "üéØ <b>–ì–æ—Ç–æ–≤ –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É —Ä–∞–∑–±–æ—Ä—É?</b>"
        
    else:
        msg = "üåä <b>Location Pulse for Your Profile</b>\n\n"
        
        if priority == 'water' or priority == 'balance':
            msg += "üèùÔ∏è <b>Palm Jumeirah</b>\n"
            msg += "Early light, private morning ritual\n"
            msg += "Anchors: front serenity, panorama\n\n"
            
            msg += "üåä <b>Dubai Marina</b>\n"
            msg += "Water rhythm, yacht dynamics\n"
            msg += "Atmosphere: active waterfront life\n\n"
        
        if priority == 'center' or priority == 'balance':
            msg += "üèôÔ∏è <b>Downtown Dubai</b>\n"
            msg += "City energy, vertical panorama\n"
            msg += "Focus: urban dynamics, height prestige\n\n"
            
            msg += "üèõÔ∏è <b>Business Bay</b>\n"
            msg += "Business pulse, investment focus\n"
            msg += "Profile: business center, liquidity\n\n"
        
        keyboard = {
            'keyboard': [
                ['üìû Contact broker'],
                ['üîÑ Start over']
            ],
            'resize_keyboard': True
        }
        
        msg += "üéØ <b>Ready for detailed analysis?</b>"
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_location_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –±—Ä–æ–∫–µ—Ä–æ–º', 'üìû Contact broker']:
        session['stage'] = 'contact_method_select'
        start_contact_flow(chat_id, session)
    elif text in ['üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', 'üîÑ Start over']:
        handle_start(chat_id)
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö" if lang == 'ru' else "Choose an action from the suggested options"
        send_message(chat_id, msg)

# ==================== –ú–û–î–£–õ–¨ –í–õ–ê–î–ï–õ–ï–¶ (–ü–†–û–î–ê–¢–¨/–°–î–ê–¢–¨) ====================

def start_owner_flow(chat_id, session):
    """–ù–∞—á–∞–ª–æ —Ñ–ª–æ—É –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤"""
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üè° –ü—Ä–æ–¥–∞—Ç—å', 'üè† –°–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É'],
            ['üîÑ –ò —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üè† <b>–ú–æ–¥—É–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞</b>\n\n–ß—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å –æ–±—ä–µ–∫—Ç–æ–º?"
    else:
        msg = "üè† <b>Owner Module</b>\n\nWhat are your plans with the property?"
        keyboard['keyboard'] = [
            ['üè° Sell', 'üè† Rent'],
            ['üîÑ Both']
        ]
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_owner_action_selection(chat_id, text, session):
    """–í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üè° –ü—Ä–æ–¥–∞—Ç—å', 'üè° Sell']:
        session['data']['owner_action'] = 'sell'
    elif text in ['üè† –°–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É', 'üè† Rent']:
        session['data']['owner_action'] = 'rent'
    elif text in ['üîÑ –ò —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ', 'üîÑ Both']:
        session['data']['owner_action'] = 'both'
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Choose one of the options"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'owner_property_type'
    
    keyboard = {
        'keyboard': [
            ['üèòÔ∏è –í–∏–ª–ª–∞', 'üè¢ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã'],
            ['üè¨ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üèóÔ∏è –°—Ü–µ–Ω–∞ –æ–±—ä–µ–∫—Ç–∞:"
    else:
        msg = "üèóÔ∏è Property type:"
        keyboard['keyboard'] = [
            ['üèòÔ∏è Villa', 'üè¢ Apartment'],
            ['üè¨ Commercial']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_property_type(chat_id, text, session):
    """–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üèòÔ∏è –í–∏–ª–ª–∞', 'üèòÔ∏è Villa']:
        session['data']['property_type'] = 'villa'
    elif text in ['üè¢ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã', 'üè¢ Apartment']:
        session['data']['property_type'] = 'apartment'
    elif text in ['üè¨ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', 'üè¨ Commercial']:
        session['data']['property_type'] = 'commercial'
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏" if lang == 'ru' else "Choose property type"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'owner_rooms'
    
    keyboard = {
        'keyboard': [
            ['1', '2', '3'],
            ['4', '5+', '–°—Ç—É–¥–∏—è']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üõèÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∏—Ö–∏—Ö –∑–æ–Ω (—Å–ø–∞–ª–µ–Ω)?"
    else:
        msg = "üõèÔ∏è Number of quiet zones (bedrooms)?"
        keyboard['keyboard'] = [
            ['1', '2', '3'],
            ['4', '5+', 'Studio']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_rooms(chat_id, text, session):
    """–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç"""
    session['data']['rooms'] = text
    session['stage'] = 'owner_features'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üåÖ –¢–µ—Ä—Ä–∞—Å–∞', 'üèôÔ∏è –ü–∞–Ω–æ—Ä–∞–º–∞'],
            ['üö™ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –≤—Ö–æ–¥', 'üè° –ü–ª–æ—â–∞–¥—å'],
            ['‚úÖ –í—Å–µ –≤–∞–∂–Ω–æ']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "‚ú® –û—Å–Ω–æ–≤–Ω–æ–π –∞–∫—Ü–µ–Ω—Ç –æ–±—ä–µ–∫—Ç–∞:"
    else:
        msg = "‚ú® Main property highlight:"
        keyboard['keyboard'] = [
            ['üåÖ Terrace', 'üèôÔ∏è Panorama'],
            ['üö™ Private entrance', 'üè° Area'],
            ['‚úÖ All important']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_features(chat_id, text, session):
    """–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞"""
    session['data']['features'] = text
    session['stage'] = 'owner_occupancy'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üè† –ü—É—Å—Ç–æ–π', 'üë• –°–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É'],
            ['üè° –ñ–∏–≤—É —Å–∞–º']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üîç –û–±—ä–µ–∫—Ç —Å–µ–π—á–∞—Å:"
    else:
        msg = "üîç Property status:"
        keyboard['keyboard'] = [
            ['üè† Vacant', 'üë• Rented'],
            ['üè° Owner occupied']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_occupancy(chat_id, text, session):
    """–°—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞"""
    session['data']['occupancy'] = text
    lang = session['data'].get('language', 'ru')
    
    # –ï—Å–ª–∏ —Å–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É - —É—Ç–æ—á–Ω—è–µ–º –¥–µ—Ç–∞–ª–∏
    if text in ['üë• –°–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É', 'üë• Rented']:
        if lang == 'ru':
            msg = "üìÖ –î–æ –∫–∞–∫–æ–≥–æ —Å—Ä–æ–∫–∞ –∞—Ä–µ–Ω–¥–∞? (–Ω–∞–ø—Ä–∏–º–µ—Ä: –¥–æ –º–∞—Ä—Ç–∞ 2025)"
        else:
            msg = "üìÖ Rental contract until? (example: until March 2025)"
        
        send_message(chat_id, msg)
        session['stage'] = 'owner_price_range'
        return
    
    session['stage'] = 'owner_price_range'
    
    if lang == 'ru':
        msg = "üí∞ –î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–π —É—Å—Ç—Ä–æ–∏—Ç?\n\n(–Ω–∞–ø—Ä–∏–º–µ—Ä: 2.5-3M AED –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏–ª–∏ 15-18K AED/–º–µ—Å—è—Ü –¥–ª—è –∞—Ä–µ–Ω–¥—ã)"
    else:
        msg = "üí∞ Price range that works for you?\n\n(example: 2.5-3M AED for sale or 15-18K AED/month for rent)"
    
    send_message(chat_id, msg)

def handle_owner_price_range(chat_id, text, session):
    """–¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω"""
    session['data']['price_range'] = text
    session['stage'] = 'owner_documents'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ', 'üìã –ß–∞—Å—Ç–∏—á–Ω–æ'],
            ['‚ùå –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üìë –î–æ–∫—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã? (Title Deed, Passport, etc.)"
    else:
        msg = "üìë Documents ready? (Title Deed, Passport, etc.)"
        keyboard['keyboard'] = [
            ['‚úÖ All ready', 'üìã Partially'],
            ['‚ùå Need help']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_documents(chat_id, text, session):
    """–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    session['data']['documents'] = text
    lang = session['data'].get('language', 'ru')
    owner_action = session['data'].get('owner_action')
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞—Ä–µ–Ω–¥—ã
    if owner_action in ['rent', 'both']:
        session['stage'] = 'owner_additional_params'
        
        keyboard = {
            'keyboard': [
                ['üõãÔ∏è –° –º–µ–±–µ–ª—å—é', 'üè† –ë–µ–∑ –º–µ–±–µ–ª–∏'],
                ['üîÑ –ù–∞ –≤—ã–±–æ—Ä –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        if lang == 'ru':
            msg = "ü™ë –ú–µ–±–µ–ª—å –≤ –æ–±—ä–µ–∫—Ç–µ:"
        else:
            msg = "ü™ë Furniture in property:"
            keyboard['keyboard'] = [
                ['üõãÔ∏è Furnished', 'üè† Unfurnished'],
                ['üîÑ Tenant choice']
            ]
        
        send_message(chat_id, msg, keyboard)
        return
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ AI –∞–Ω–∞–ª–∏–∑—É –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
    session['stage'] = 'contact_method_select'
    provide_ai_signal(chat_id, session)

def handle_owner_additional_params(chat_id, text, session):
    """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞—Ä–µ–Ω–¥—ã"""
    session['data']['furniture'] = text
    session['stage'] = 'contact_method_select'
    
    # AI –∞–Ω–∞–ª–∏–∑ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä—ã–Ω–∫—É
    provide_ai_signal(chat_id, session)

def provide_ai_signal(chat_id, session):
    """AI —Å–∏–≥–Ω–∞–ª –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä—ã–Ω–∫—É"""
    lang = session['data'].get('language', 'ru')
    owner_action = session['data'].get('owner_action')
    documents = session['data'].get('documents')
    
    if lang == 'ru':
        if documents in ['‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ', '‚úÖ All ready']:
            signal = "üü¢ <b>–ß–µ—Å—Ç–Ω—ã–π —Å–∏–≥–Ω–∞–ª:</b> –º–æ–∂–Ω–æ –∏–¥—Ç–∏ –≤ —Ä—ã–Ω–æ–∫ —Å—Ä–∞–∑—É.\n\n"
            signal += "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã\n"
            signal += "‚úÖ –†—ã–Ω–æ–∫ –∞–∫—Ç–∏–≤–µ–Ω –¥–ª—è –≤–∞—à–µ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞\n"
            signal += "‚ö° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ + –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–µ–Ω–∞ = –±—ã—Å—Ç—Ä–∞—è —Å–¥–µ–ª–∫–∞"
        else:
            signal = "üü° <b>–ß–µ—Å—Ç–Ω—ã–π —Å–∏–≥–Ω–∞–ª:</b> –ª—É—á—à–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è.\n\n"
            signal += "üìã –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç\n"
            signal += "üì∏ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ\n"
            signal += "üõ†Ô∏è –í–æ–∑–º–æ–∂–µ–Ω –ª–µ–≥–∫–∏–π refresh –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞\n"
            signal += "üìà –≠—Ç–æ –ø–æ–≤—ã—Å–∏—Ç —Ü–µ–Ω—É –Ω–∞ 3-7%"
        
        signal += f"\n\nüéØ –ì–æ—Ç–æ–≤ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –±—Ä–æ–∫–µ—Ä—É –¥–ª—è {owner_action}?"
    else:
        if documents in ['‚úÖ All ready']:
            signal = "üü¢ <b>Honest signal:</b> ready for market now.\n\n"
            signal += "‚úÖ Documents ready\n"
            signal += "‚úÖ Market is active for your segment\n"
            signal += "‚ö° Recommendation: quality photos + right price = quick deal"
        else:
            signal = "üü° <b>Honest signal:</b> better to prepare.\n\n"
            signal += "üìã Complete documentation\n"
            signal += "üì∏ Professional photos\n" 
            signal += "üõ†Ô∏è Light interior refresh possible\n"
            signal += "üìà This increases price by 3-7%"
        
        signal += f"\n\nüéØ Ready to pass profile to broker for {owner_action}?"
    
    send_message(chat_id, signal, parse_mode='HTML')
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–±–æ—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    start_contact_flow(chat_id, session)

# ==================== –ú–û–î–£–õ–¨ –ö–û–ù–¢–ê–ö–¢–û–í ====================

def start_contact_flow(chat_id, session):
    """–ù–∞—áalo —Å–±–æ—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üì± –¢–µ–ª–µ—Ñ–æ–Ω', 'üí¨ WhatsApp'],
            ['üìß Email', 'üì≤ Telegram']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üìû <b>–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —É–¥–æ–±–Ω–µ–µ?</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±:"
    else:
        msg = "üìû <b>How to contact you?</b>\n\nChoose preferred method:"
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_contact_method_selection(chat_id, text, session):
    """–í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ —Å–≤—è–∑–∏"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üì± –¢–µ–ª–µ—Ñ–æ–Ω', 'üí¨ WhatsApp', 'üì± Phone', 'üí¨ WhatsApp']:
        session['data']['contact_method'] = 'phone'
        session['stage'] = 'phone_input'
        
        keyboard = {
            'keyboard': [
                [{'text': 'üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º', 'request_contact': True}],
                ['‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        if lang == 'ru':
            msg = "üì± <b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>\n\n–ú–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é:"
        else:
            msg = "üì± <b>Phone Number</b>\n\nYou can share your number or enter manually:"
            keyboard['keyboard'] = [
                [{'text': 'üì± Share number', 'request_contact': True}],
                ['‚úçÔ∏è Enter manually']
            ]
        
        send_message(chat_id, msg, keyboard, parse_mode='HTML')
        
    elif text in ['üìß Email']:
        session['data']['contact_method'] = 'email'
        session['stage'] = 'email_input'
        
        if lang == 'ru':
            msg = "üìß <b>Email –∞–¥—Ä–µ—Å</b>\n\n–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –ø–ª–∞–Ω–æ–≤:"
        else:
            msg = "üìß <b>Email Address</b>\n\nEnter email for documents and plans:"
        
        send_message(chat_id, msg, parse_mode='HTML')
        
    elif text in ['üì≤ Telegram']:
        session['data']['contact_method'] = 'telegram'
        session['stage'] = 'telegram_input'
        
        if lang == 'ru':
            msg = "üì≤ <b>Telegram</b>\n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à @username –≤ Telegram:"
        else:
            msg = "üì≤ <b>Telegram</b>\n\nEnter your @username in Telegram:"
        
        send_message(chat_i
    
    if not text.startswith('@'):
        text = '@' + text
    
    if re.match(tg_pattern, text):
        session['data']['telegram'] = text
        session['stage'] = 'email_input'
        
        if lang == 'ru':
            msg = f"‚úÖ Telegram —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {text}\n\nüìß <b>Email (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</b>\n\n–û—Å—Ç–∞–≤—å—Ç–µ email –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:"
        else:
            msg = f"‚úÖ Telegram saved: {text}\n\nüìß <b>Email (optional)</b>\n\nLeave email for documents:"
        
        keyboard = {
            'keyboard': [['‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å' if lang == 'ru' else '‚è≠Ô∏è Skip']],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        send_message(chat_id, msg, keyboard, parse_mode='HTML')
    else:
        if lang == 'ru':
            msg = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.\n\n–ü—Ä–∏–º–µ—Ä: @username (5-32 —Å–∏–º–≤–æ–ª–∞)"
        else:
            msg = "‚ùå Invalid format.\n\nExample: @username (5-32 characters)"
        send_message(chat_id, msg)

def show_contact_confirmation(chat_id, session):
    """–ü–æ–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    lang = session['data'].get('language', 'ru')
    data = session['data']
    
    if lang == 'ru':
        msg = "üìã <b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ:</b>\n\n"
    else:
        msg = "üìã <b>Verify information:</b>\n\n"
    
    if data.get('phone'):
        msg += f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n"
    if data.get('email'):
        msg += f"üìß Email: {data['email']}\n"
    if data.get('telegram'):
        msg += f"üì≤ Telegram: {data['telegram']}\n"
    
    if lang == 'ru':
        msg += "\nüéØ –ü–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –±—Ä–æ–∫–µ—Ä—É?"
    else:
        msg += "\nüéØ Send profile to broker?"
    
    keyboard = {
        'keyboard': [
            ['‚úÖ –î–∞, –ø–µ—Ä–µ–¥–∞—Ç—å' if lang == 'ru' else '‚úÖ Yes, send'],
            ['‚úèÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å' if lang == 'ru' else '‚úèÔ∏è Correct']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_contact_confirmation(chat_id, text, session):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['‚úÖ –î–∞, –ø–µ—Ä–µ–¥–∞—Ç—å', '‚úÖ Yes, send']:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∑–∞—è–≤–∫—É –≤–∞–º
        send_detailed_lead_notification(session['data'], chat_id)
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if lang == 'ru':
            msg = """‚úÖ <b>–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</b>

–°–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∏ –ø–æ–¥–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–¥ –≤–∞—à —Å—Ü–µ–Ω–∞—Ä–∏–π.

üì± <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>
‚Ä¢ Telegram: @ivandubai_signal_bot
‚Ä¢ WhatsApp: +971502778021
‚Ä¢ Website: www.ivandubai.xyz

üè† <i>Ivan Tyrtyshnyy | Dubai Real Estate</i>"""
        else:
            msg = """‚úÖ <b>Request sent!</b>

I'll contact you within a day to clarify details and find options for your scenario.

üì± <b>Contacts:</b>
‚Ä¢ Telegram: @ivandubai_signal_bot
‚Ä¢ WhatsApp: +971502778021
‚Ä¢ Website: www.ivandubai.xyz

üè† <i>Ivan Tyrtyshnyy | Dubai Real Estate</i>"""
        
        keyboard = {
            'keyboard': [
                ['üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ' if lang == 'ru' else 'üîÑ Start over']
            ],
            'resize_keyboard': True
        }
        
        send_message(chat_id, msg, keyboard, parse_mode='HTML')
        
    elif text in ['‚úèÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å', '‚úèÔ∏è Correct']:
        session['stage'] = 'contact_method_select'
        start_contact_flow(chat_id, session)
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ" if lang == 'ru' else "Choose action"
        send_message(chat_id, msg)

# ==================== –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –ë–†–û–ö–ï–†–£ ====================

def send_detailed_lead_notification(user_data, client_chat_id):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∑–∞—è–≤–∫–∏ –≤ –ª–∏—á–Ω—ã–π —á–∞—Ç –ò–≤–∞–Ω–∞"""
    IVAN_CHAT_ID = "367380234"  # –í–∞—à chat_id
    
    # –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    lang = user_data.get('language', 'ru')
    name = user_data.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
    role = user_data.get('role', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')
    
    # –ù–∞—á–∞–ª–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    notification = f"""üî• <b>–ù–û–í–ê–Ø –î–ï–¢–ê–õ–¨–ù–ê–Ø –ó–ê–Ø–í–ö–ê!</b>

üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> {name}
üó£ <b>–Ø–∑—ã–∫:</b> {'–†—É—Å—Å–∫–∏–π' if lang == 'ru' else 'English'}
üì± <b>Client ID:</b> <code>{client_chat_id}</code>
‚è∞ <b>–í—Ä–µ–º—è:</b> {get_current_time()}

"""

    # –†–æ–ª—å –∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if role == 'owner':
        notification += format_owner_notification(user_data)
    else:
        notification += format_buyer_notification(user_data)
    
    # –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    notification += "\nüìû <b>–ö–û–ù–¢–ê–ö–¢–´:</b>\n"
    if user_data.get('phone'):
        notification += f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: <code>{user_data['phone']}</code>\n"
    if user_data.get('email'):
        notification += f"üìß Email: <code>{user_data['email']}</code>\n"
    if user_data.get('telegram'):
        notification += f"üì≤ Telegram: {user_data['telegram']}\n"
    
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    keyboard = {
        'inline_keyboard': [
            [
                {'text': '‚úÖ –í–∑—è–ª –≤ —Ä–∞–±–æ—Ç—É', 'callback_data': f'take_{client_chat_id}'},
                {'text': 'üìû –°–≤—è–∑–∞–ª—Å—è', 'callback_data': f'contacted_{client_chat_id}'}
            ],
            [
                {'text': 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–∏–¥–æ–≤', 'callback_data': 'stats'},
                {'text': 'üè† ivandubai.xyz', 'url': 'https://www.ivandubai.xyz'}
            ]
        ]
    }
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    send_message(IVAN_CHAT_ID, notification, keyboard, parse_mode='HTML')
    print(f"Detailed lead notification sent: {user_data}")

def format_owner_notification(user_data):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤"""
    notification = "üè† <b>–¢–ò–ü –ó–ê–Ø–í–ö–ò:</b> –í–õ–ê–î–ï–õ–ï–¶\n\n"
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    owner_action = user_data.get('owner_action', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')
    if owner_action == 'sell':
        notification += "üéØ <b>–¶–µ–ª—å:</b> –ü—Ä–æ–¥–∞—Ç—å\n"
    elif owner_action == 'rent':
        notification += "üéØ <b>–¶–µ–ª—å:</b> –°–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É\n"
    elif owner_action == 'both':
        notification += "üéØ <b>–¶–µ–ª—å:</b> –ü—Ä–æ–¥–∞—Ç—å –ò —Å–¥–∞—Ç—å\n"
    
    notification += f"üèóÔ∏è <b>–¢–∏–ø:</b> {user_data.get('property_type', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
    notification += f"üõèÔ∏è <b>–ö–æ–º–Ω–∞—Ç:</b> {user_data.get('rooms', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
    notification += f"‚ú® <b>–ê–∫—Ü–µ–Ω—Ç:</b> {user_data.get('features', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
    notification += f"üîç <b>–°—Ç–∞—Ç—É—Å:</b> {user_data.get('occupancy', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
    notification += f"üí∞ <b>–¶–µ–Ω–∞:</b> {user_data.get('price_range', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
    notification += f"üìë <b>–î–æ–∫—É–º–µ–Ω—Ç—ã:</b> {user_data.get('documents', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
    
    if user_data.get('furniture'):
        notification += f"ü™ë <b>–ú–µ–±–µ–ª—å:</b> {user_data['furniture']}\n"
    
    return notification

def format_buyer_notification(user_data):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π"""
    notification = "üè† <b>–¢–ò–ü –ó–ê–Ø–í–ö–ò:</b> –ü–û–ö–£–ü–ê–¢–ï–õ–¨/–ò–ù–í–ï–°–¢–û–†\n\n"
    
    # –†–æ–ª—å
    role = user_data.get('role', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')
    role_names = {
        'live': '–î–ª—è –∂–∏–∑–Ω–∏',
        'invest': '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏',
        'mixed': '–°–º–µ—à–∞–Ω–Ω—ã–π'
    }
    notification += f"üéØ <b>–¶–µ–ª—å:</b> {role_names.get(role, role)}\n"
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    notification += f"üí∞ <b>–ë—é–¥–∂–µ—Ç:</b> {user_data.get('budget', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
    
    priority = user_data.get('priority', '–Ω–µ —É–∫–∞–∑–∞–Ω')
    priority_names = {
        'water': '–£—Ç—Ä–æ —É –≤–æ–¥—ã üåä',
        'center': '–î–æ—Å—Ç—É–ø –∫ —Ü–µ–Ω—Ç—Ä—É üèôÔ∏è',
        'balance': '–ë–∞–ª–∞–Ω—Å ‚öñÔ∏è'
    }
    notification += f"üè† <b>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</b> {priority_names.get(priority, priority)}\n"
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ª–æ–∫–∞—Ü–∏–π
    notification += "\nüéØ <b>–†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –õ–û–ö–ê–¶–ò–ò:</b>\n"
    if priority in ['water', 'balance']:
        notification += "‚Ä¢ üèùÔ∏è Palm Jumeirah\n‚Ä¢ üåä Dubai Marina\n"
    if priority in ['center', 'balance']:
        notification += "‚Ä¢ üèôÔ∏è Downtown Dubai\n‚Ä¢ üèõÔ∏è Business Bay\n"
    
    return notification

def get_current_time():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è"""
    try:
        now = datetime.now()
        return now.strftime('%d.%m.%Y %H:%M')
    except:
        return "—Å–µ–π—á–∞—Å"

# ==================== CALLBACK –û–ë–†–ê–ë–û–¢–ö–ê ====================

def handle_callback(callback):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π inline –∫–Ω–æ–ø–æ–∫"""
    chat_id = callback['from']['id']
    data = callback['data']
    message_id = callback['message']['message_id']
    
    if data.startswith('take_'):
        client_id = data.replace('take_', '')
        answer_callback(callback['id'], f"‚úÖ –õ–∏–¥ {client_id} –≤–∑—è—Ç –≤ —Ä–∞–±–æ—Ç—É!")
        edit_message_text(chat_id, message_id, f"‚úÖ <b>–õ–∏–¥ –≤–∑—è—Ç –≤ —Ä–∞–±–æ—Ç—É</b>\n\nClient ID: {client_id}")
    
    elif data.startswith('contacted_'):
        client_id = data.replace('contacted_', '')
        answer_callback(callback['id'], f"üìû –û—Ç–º–µ—á–µ–Ω–æ: —Å–≤—è–∑—å —Å {client_id}")
        edit_message_text(chat_id, message_id, f"üìû <b>–°–≤—è–∑—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞</b>\n\nClient ID: {client_id}")
    
    elif data == 'stats':
        answer_callback(callback['id'], "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

def answer_callback(callback_id, text):
    """–û—Ç–≤–µ—Ç –Ω–∞ callback query"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/answerCallbackQuery"
    payload = {'callback_query_id': callback_id, 'text': text}
    requests.post(url, json=payload)

def edit_message_text(chat_id, message_id, text):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/editMessageText"
    payload = {
        'chat_id': chat_id,
        'message_id': message_id,
        'text': text,
        'parse_mode': 'HTML'
    }
    requests.post(url, json=payload)

# ==================== –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô ====================

def send_message(chat_id, text, keyboard=None, parse_mode=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    
    payload = {
        'chat_id': chat_id,
        'text': text
    }
    
    if keyboard:
        payload['reply_markup'] = keyboard
    
    if parse_mode:
        payload['parse_mode'] = parse_mode
    
    try:
        response = requests.post(url, json=payload)
        return response.json()
    except Exception as e:
        print(f"Send message error: {e}")
        return None

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 8080))
    app.run(host='0.0.0.0', port=port)d, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º")

def handle_start(chat_id):
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã - –≤—ã–±–æ—Ä —è–∑—ã–∫–∞"""
    user_sessions[chat_id] = {'stage': 'language_select', 'data': {}}
    
    keyboard = {
        'keyboard': [
            ['–†—É—Å—Å–∫–∏–π', 'English']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    text = "üè† <b>UAE Property Navigator</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language:"
    send_message(chat_id, text, keyboard, parse_mode='HTML')

def handle_language_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    if '–†—É—Å—Å–∫–∏–π' in text:
        session['data']['language'] = 'ru'
        session['stage'] = 'role_select'
        
        keyboard = {
            'keyboard': [
                ['üè† –ñ–∏—Ç—å', 'üìà –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å'],
                ['üîÑ –ü—Ä–æ–¥–∞—Ç—å/–°–¥–∞—Ç—å', 'üéØ –°–º–µ—à–∞–Ω–Ω—ã–π']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        name = session['data'].get('name', '–¥—Ä—É–≥')
        text_msg = f"–ü—Ä–∏–≤–µ—Ç, {name}. –ò–≤–∞–Ω, —Ü–∏—Ñ—Ä–æ–≤–æ–π –Ω–∞–ø–∞—Ä–Ω–∏–∫ –≤ —ç—Ñ–∏—Ä–µ.\n\n–•–æ—á—É —É—Å–ª—ã—à–∞—Ç—å —Ç–≤–æ–π —Ç–µ–∫—É—â–∏–π —Ñ–æ–∫—É—Å: –∂–∏—Ç—å, –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–∫—Ç–∏–≤–æ–º?"
        
        send_message(chat_id, text_msg, keyboard)
        
    elif 'English' in text:
        session['data']['language'] = 'en'
        session['stage'] = 'role_select'
        
        keyboard = {
            'keyboard': [
                ['üè† Live', 'üìà Invest'],
                ['üîÑ Sell/Rent', 'üéØ Mixed']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        name = session['data'].get('name', 'friend')
        text_msg = f"Hi, {name}. Ivan, digital partner online.\n\nWhat's your current focus: live, invest, manage property?"
        
        send_message(chat_id, text_msg, keyboard)
    else:
        send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")

def handle_role_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    lang = session['data'].get('language', 'ru')
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å
    if text in ['üè† –ñ–∏—Ç—å', 'üè† Live']:
        session['data']['role'] = 'live'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    elif text in ['üìà –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å', 'üìà Invest']:
        session['data']['role'] = 'invest'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    elif text in ['üîÑ –ü—Ä–æ–¥–∞—Ç—å/–°–¥–∞—Ç—å', 'üîÑ Sell/Rent']:
        session['data']['role'] = 'owner'
        session['stage'] = 'owner_action_select'
        start_owner_flow(chat_id, session)
    elif text in ['üéØ –°–º–µ—à–∞–Ω–Ω—ã–π', 'üéØ Mixed']:
        session['data']['role'] = 'mixed'
        session['stage'] = 'budget_input'
        ask_budget(chat_id, session)
    else:
        msg = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Please choose one of the suggested options"
        send_message(chat_id, msg)

def ask_budget(chat_id, session):
    """–ó–∞–ø—Ä–æ—Å –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π/–∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤"""
    lang = session['data'].get('language', 'ru')
    
    if lang == 'ru':
        msg = "–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫–æ–≤ –æ—Ä–∏–µ–Ω—Ç–∏—Ä –ø–æ –±—é–¥–∂–µ—Ç—É?\n\nüí∞ –ù–∞–ø—Ä–∏–º–µ—Ä: 2-3M AED, 1.5M AED, 5M+ AED"
    else:
        msg = "Great! What's your budget range?\n\nüí∞ For example: 2-3M AED, 1.5M AED, 5M+ AED"
    
    send_message(chat_id, msg)

def handle_budget_input(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –±—é–¥–∂–µ—Ç–∞"""
    lang = session['data'].get('language', 'ru')
    session['data']['budget'] = text
    session['stage'] = 'priority_select'
    
    keyboard = {
        'keyboard': [
            ['üåä –£—Ç—Ä–æ —É –≤–æ–¥—ã', 'üèôÔ∏è –î–æ—Å—Ç—É–ø –∫ —Ü–µ–Ω—Ç—Ä—É'] if lang == 'ru' else ['üåä Water morning', 'üèôÔ∏è City access'],
            ['‚öñÔ∏è –ë–∞–ª–∞–Ω—Å'] if lang == 'ru' else ['‚öñÔ∏è Balance']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = f"–ë—é–¥–∂–µ—Ç {text} –ø—Ä–∏–Ω—è—Ç!\n\nü§î –ß—Ç–æ –≤–∞–∂–Ω–µ–µ: —É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ —É –≤–æ–¥—ã –∏–ª–∏ –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –¥–µ–ª–æ–≤–æ–º—É —Ü–µ–Ω—Ç—Ä—É?"
    else:
        msg = f"Budget {text} noted!\n\nü§î What's more important: peaceful morning by water or quick access to business center?"
    
    send_message(chat_id, msg, keyboard)

def handle_priority_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üåä –£—Ç—Ä–æ —É –≤–æ–¥—ã', 'üåä Water morning']:
        session['data']['priority'] = 'water'
    elif text in ['üèôÔ∏è –î–æ—Å—Ç—É–ø –∫ —Ü–µ–Ω—Ç—Ä—É', 'üèôÔ∏è City access']:
        session['data']['priority'] = 'center'
    elif text in ['‚öñÔ∏è –ë–∞–ª–∞–Ω—Å', '‚öñÔ∏è Balance']:
        session['data']['priority'] = 'balance'
    else:
        msg = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Please choose one of the options"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'show_locations'
    show_location_pulse(chat_id, session)

def show_location_pulse(chat_id, session):
    """–ü–æ–∫–∞–∑ –ø—É–ª—å—Å–∞ –ª–æ–∫–∞—Ü–∏–π"""
    lang = session['data'].get('language', 'ru')
    priority = session['data'].get('priority')
    role = session['data'].get('role')
    
    if lang == 'ru':
        msg = "üåä <b>–ü—É–ª—å—Å –ª–æ–∫–∞—Ü–∏–π –ø–æ–¥ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
        
        if priority == 'water' or priority == 'balance':
            msg += "üèùÔ∏è <b>Palm Jumeirah</b>\n"
            msg += "–†–∞–Ω–Ω–∏–π —Å–≤–µ—Ç, —á–∞—Å—Ç–Ω—ã–π —Ä–∏—Ç—É–∞–ª —É—Ç—Ä–∞\n"
            msg += "–Ø–∫–æ—Ä—è: —Ç–∏—à–∏–Ω–∞ —Ñ—Ä–æ–Ω—Ç–∞, –ø–∞–Ω–æ—Ä–∞–º–∞\n\n"
            
            msg += "üåä <b>Dubai Marina</b>\n"
            msg += "–í–æ–¥–Ω—ã–π —Ä–∏—Ç–º, –¥–∏–Ω–∞–º–∏–∫–∞ —è—Ö—Ç\n"
            msg += "–ê—Ç–º–æ—Å—Ñ–µ—Ä–∞: –∞–∫—Ç–∏–≤–Ω–∞—è –∂–∏–∑–Ω—å —É –≤–æ–¥—ã\n\n"
        
        if priority == 'center' or priority == 'balance':
            msg += "üèôÔ∏è <b>Downtown Dubai</b>\n"
            msg += "–≠–Ω–µ—Ä–≥–∏—è —Ü–µ–Ω—Ç—Ä–∞, –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ø–∞–Ω–æ—Ä–∞–º–∞\n"
            msg += "–§–æ–∫—É—Å: –¥–∏–Ω–∞–º–∏–∫–∞ –≥–æ—Ä–æ–¥–∞, –ø—Ä–µ—Å—Ç–∏–∂ –≤—ã—Å–æ—Ç—ã\n\n"
            
            msg += "üèõÔ∏è <b>Business Bay</b>\n"
            msg += "–ë–∏–∑–Ω–µ—Å-–ø—É–ª—å—Å, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Ñ–æ–∫—É—Å\n"
            msg += "–ü—Ä–æ—Ñ–∏–ª—å: –¥–µ–ª–æ–≤–æ–π —Ü–µ–Ω—Ç—Ä, –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å\n\n"
        
        keyboard = {
            'keyboard': [
                ['üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –±—Ä–æ–∫–µ—Ä–æ–º'],
                ['üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ']
            ],
            'resize_keyboard': True
        }
        
        msg += "üéØ <b>–ì–æ—Ç–æ–≤ –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É —Ä–∞–∑–±–æ—Ä—É?</b>"
        
    else:
        msg = "üåä <b>Location Pulse for Your Profile</b>\n\n"
        
        if priority == 'water' or priority == 'balance':
            msg += "üèùÔ∏è <b>Palm Jumeirah</b>\n"
            msg += "Early light, private morning ritual\n"
            msg += "Anchors: front serenity, panorama\n\n"
            
            msg += "üåä <b>Dubai Marina</b>\n"
            msg += "Water rhythm, yacht dynamics\n"
            msg += "Atmosphere: active waterfront life\n\n"
        
        if priority == 'center' or priority == 'balance':
            msg += "üèôÔ∏è <b>Downtown Dubai</b>\n"
            msg += "City energy, vertical panorama\n"
            msg += "Focus: urban dynamics, height prestige\n\n"
            
            msg += "üèõÔ∏è <b>Business Bay</b>\n"
            msg += "Business pulse, investment focus\n"
            msg += "Profile: business center, liquidity\n\n"
        
        keyboard = {
            'keyboard': [
                ['üìû Contact broker'],
                ['üîÑ Start over']
            ],
            'resize_keyboard': True
        }
        
        msg += "üéØ <b>Ready for detailed analysis?</b>"
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_location_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –±—Ä–æ–∫–µ—Ä–æ–º', 'üìû Contact broker']:
        session['stage'] = 'contact_method_select'
        start_contact_flow(chat_id, session)
    elif text in ['üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', 'üîÑ Start over']:
        handle_start(chat_id)
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö" if lang == 'ru' else "Choose an action from the suggested options"
        send_message(chat_id, msg)

# ==================== –ú–û–î–£–õ–¨ –í–õ–ê–î–ï–õ–ï–¶ (–ü–†–û–î–ê–¢–¨/–°–î–ê–¢–¨) ====================

def start_owner_flow(chat_id, session):
    """–ù–∞—á–∞–ª–æ —Ñ–ª–æ—É –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤"""
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üè° –ü—Ä–æ–¥–∞—Ç—å', 'üè† –°–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É'],
            ['üîÑ –ò —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üè† <b>–ú–æ–¥—É–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞</b>\n\n–ß—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å –æ–±—ä–µ–∫—Ç–æ–º?"
    else:
        msg = "üè† <b>Owner Module</b>\n\nWhat are your plans with the property?"
        keyboard['keyboard'] = [
            ['üè° Sell', 'üè† Rent'],
            ['üîÑ Both']
        ]
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_owner_action_selection(chat_id, text, session):
    """–í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üè° –ü—Ä–æ–¥–∞—Ç—å', 'üè° Sell']:
        session['data']['owner_action'] = 'sell'
    elif text in ['üè† –°–¥–∞—Ç—å –≤ –∞—Ä–µ–Ω–¥—É', 'üè† Rent']:
        session['data']['owner_action'] = 'rent'
    elif text in ['üîÑ –ò —Ç–æ, –∏ –¥—Ä—É–≥–æ–µ', 'üîÑ Both']:
        session['data']['owner_action'] = 'both'
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Choose one of the options"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'owner_property_type'
    
    keyboard = {
        'keyboard': [
            ['üèòÔ∏è –í–∏–ª–ª–∞', 'üè¢ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã'],
            ['üè¨ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üèóÔ∏è –°—Ü–µ–Ω–∞ –æ–±—ä–µ–∫—Ç–∞:"
    else:
        msg = "üèóÔ∏è Property type:"
        keyboard['keyboard'] = [
            ['üèòÔ∏è Villa', 'üè¢ Apartment'],
            ['üè¨ Commercial']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_property_type(chat_id, text, session):
    """–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üèòÔ∏è –í–∏–ª–ª–∞', 'üèòÔ∏è Villa']:
        session['data']['property_type'] = 'villa'
    elif text in ['üè¢ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã', 'üè¢ Apartment']:
        session['data']['property_type'] = 'apartment'
    elif text in ['üè¨ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', 'üè¨ Commercial']:
        session['data']['property_type'] = 'commercial'
    else:
        msg = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏" if lang == 'ru' else "Choose property type"
        send_message(chat_id, msg)
        return
    
    session['stage'] = 'owner_rooms'
    
    keyboard = {
        'keyboard': [
            ['1', '2', '3'],
            ['4', '5+', '–°—Ç—É–¥–∏—è']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üõèÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∏—Ö–∏—Ö –∑–æ–Ω (—Å–ø–∞–ª–µ–Ω)?"
    else:
        msg = "üõèÔ∏è Number of quiet zones (bedrooms)?"
        keyboard['keyboard'] = [
            ['1', '2', '3'],
            ['4', '5+', 'Studio']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_rooms(chat_id, text, session):
    """–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç"""
    session['data']['rooms'] = text
    session['stage'] = 'owner_features'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üåÖ –¢–µ—Ä—Ä–∞—Å–∞', 'üèôÔ∏è –ü–∞–Ω–æ—Ä–∞–º–∞'],
            ['üö™ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –≤—Ö–æ–¥', 'üè° –ü–ª–æ—â–∞–¥—å'],
            ['‚úÖ –í—Å–µ –≤–∞–∂–Ω–æ']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "‚ú® –û—Å–Ω–æ–≤–Ω–æ–π –∞–∫—Ü–µ–Ω—Ç –æ–±—ä–µ–∫—Ç–∞:"
    else:
        msg = "‚ú® Main property highlight:"
        keyboard['keyboard'] = [
            ['üåÖ Terrace', 'üèôÔ∏è Panorama'],
            ['üö™ Private entrance', 'üè° Area'],
            ['‚úÖ All important']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_features(chat_id, text, session):
    """–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞"""
    session['data']['features'] = text
    session['stage'] = 'owner_occupancy'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üè† –ü—É—Å—Ç–æ–π', 'üë• –°–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É'],
            ['üè° –ñ–∏–≤—É —Å–∞–º']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üîç –û–±—ä–µ–∫—Ç —Å–µ–π—á–∞—Å:"
    else:
        msg = "üîç Property status:"
        keyboard['keyboard'] = [
            ['üè† Vacant', 'üë• Rented'],
            ['üè° Owner occupied']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_occupancy(chat_id, text, session):
    """–°—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞"""
    session['data']['occupancy'] = text
    lang = session['data'].get('language', 'ru')
    
    # –ï—Å–ª–∏ —Å–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É - —É—Ç–æ—á–Ω—è–µ–º –¥–µ—Ç–∞–ª–∏
    if text in ['üë• –°–¥–∞–Ω –≤ –∞—Ä–µ–Ω–¥—É', 'üë• Rented']:
        if lang == 'ru':
            msg = "üìÖ –î–æ –∫–∞–∫–æ–≥–æ —Å—Ä–æ–∫–∞ –∞—Ä–µ–Ω–¥–∞? (–Ω–∞–ø—Ä–∏–º–µ—Ä: –¥–æ –º–∞—Ä—Ç–∞ 2025)"
        else:
            msg = "üìÖ Rental contract until? (example: until March 2025)"
        
        send_message(chat_id, msg)
        session['stage'] = 'owner_price_range'
        return
    
    session['stage'] = 'owner_price_range'
    
    if lang == 'ru':
        msg = "üí∞ –î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–π —É—Å—Ç—Ä–æ–∏—Ç?\n\n(–Ω–∞–ø—Ä–∏–º–µ—Ä: 2.5-3M AED –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏–ª–∏ 15-18K AED/–º–µ—Å—è—Ü –¥–ª—è –∞—Ä–µ–Ω–¥—ã)"
    else:
        msg = "üí∞ Price range that works for you?\n\n(example: 2.5-3M AED for sale or 15-18K AED/month for rent)"
    
    send_message(chat_id, msg)

def handle_owner_price_range(chat_id, text, session):
    """–¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω"""
    session['data']['price_range'] = text
    session['stage'] = 'owner_documents'
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ', 'üìã –ß–∞—Å—Ç–∏—á–Ω–æ'],
            ['‚ùå –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üìë –î–æ–∫—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã? (Title Deed, Passport, etc.)"
    else:
        msg = "üìë Documents ready? (Title Deed, Passport, etc.)"
        keyboard['keyboard'] = [
            ['‚úÖ All ready', 'üìã Partially'],
            ['‚ùå Need help']
        ]
    
    send_message(chat_id, msg, keyboard)

def handle_owner_documents(chat_id, text, session):
    """–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    session['data']['documents'] = text
    lang = session['data'].get('language', 'ru')
    owner_action = session['data'].get('owner_action')
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞—Ä–µ–Ω–¥—ã
    if owner_action in ['rent', 'both']:
        session['stage'] = 'owner_additional_params'
        
        keyboard = {
            'keyboard': [
                ['üõãÔ∏è –° –º–µ–±–µ–ª—å—é', 'üè† –ë–µ–∑ –º–µ–±–µ–ª–∏'],
                ['üîÑ –ù–∞ –≤—ã–±–æ—Ä –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        if lang == 'ru':
            msg = "ü™ë –ú–µ–±–µ–ª—å –≤ –æ–±—ä–µ–∫—Ç–µ:"
        else:
            msg = "ü™ë Furniture in property:"
            keyboard['keyboard'] = [
                ['üõãÔ∏è Furnished', 'üè† Unfurnished'],
                ['üîÑ Tenant choice']
            ]
        
        send_message(chat_id, msg, keyboard)
        return
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ AI –∞–Ω–∞–ª–∏–∑—É –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
    session['stage'] = 'contact_method_select'
    provide_ai_signal(chat_id, session)

def handle_owner_additional_params(chat_id, text, session):
    """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞—Ä–µ–Ω–¥—ã"""
    session['data']['furniture'] = text
    session['stage'] = 'contact_method_select'
    
    # AI –∞–Ω–∞–ª–∏–∑ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä—ã–Ω–∫—É
    provide_ai_signal(chat_id, session)

def provide_ai_signal(chat_id, session):
    """AI —Å–∏–≥–Ω–∞–ª –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä—ã–Ω–∫—É"""
    lang = session['data'].get('language', 'ru')
    owner_action = session['data'].get('owner_action')
    documents = session['data'].get('documents')
    
    if lang == 'ru':
        if documents in ['‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ', '‚úÖ All ready']:
            signal = "üü¢ <b>–ß–µ—Å—Ç–Ω—ã–π —Å–∏–≥–Ω–∞–ª:</b> –º–æ–∂–Ω–æ –∏–¥—Ç–∏ –≤ —Ä—ã–Ω–æ–∫ —Å—Ä–∞–∑—É.\n\n"
            signal += "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã\n"
            signal += "‚úÖ –†—ã–Ω–æ–∫ –∞–∫—Ç–∏–≤–µ–Ω –¥–ª—è –≤–∞—à–µ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞\n"
            signal += "‚ö° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ + –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–µ–Ω–∞ = –±—ã—Å—Ç—Ä–∞—è —Å–¥–µ–ª–∫–∞"
        else:
            signal = "üü° <b>–ß–µ—Å—Ç–Ω—ã–π —Å–∏–≥–Ω–∞–ª:</b> –ª—É—á—à–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è.\n\n"
            signal += "üìã –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç\n"
            signal += "üì∏ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ\n"
            signal += "üõ†Ô∏è –í–æ–∑–º–æ–∂–µ–Ω –ª–µ–≥–∫–∏–π refresh –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞\n"
            signal += "üìà –≠—Ç–æ –ø–æ–≤—ã—Å–∏—Ç —Ü–µ–Ω—É –Ω–∞ 3-7%"
        
        signal += f"\n\nüéØ –ì–æ—Ç–æ–≤ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –±—Ä–æ–∫–µ—Ä—É –¥–ª—è {owner_action}?"
    else:
        if documents in ['‚úÖ All ready']:
            signal = "üü¢ <b>Honest signal:</b> ready for market now.\n\n"
            signal += "‚úÖ Documents ready\n"
            signal += "‚úÖ Market is active for your segment\n"
            signal += "‚ö° Recommendation: quality photos + right price = quick deal"
        else:
            signal = "üü° <b>Honest signal:</b> better to prepare.\n\n"
            signal += "üìã Complete documentation\n"
            signal += "üì∏ Professional photos\n" 
            signal += "üõ†Ô∏è Light interior refresh possible\n"
            signal += "üìà This increases price by 3-7%"
        
        signal += f"\n\nüéØ Ready to pass profile to broker for {owner_action}?"
    
    send_message(chat_id, signal, parse_mode='HTML')
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–±–æ—Ä—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    start_contact_flow(chat_id, session)

# ==================== –ú–û–î–£–õ–¨ –ö–û–ù–¢–ê–ö–¢–û–í ====================

def start_contact_flow(chat_id, session):
    """–ù–∞—áalo —Å–±–æ—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    lang = session['data'].get('language', 'ru')
    
    keyboard = {
        'keyboard': [
            ['üì± –¢–µ–ª–µ—Ñ–æ–Ω', 'üí¨ WhatsApp'],
            ['üìß Email', 'üì≤ Telegram']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    if lang == 'ru':
        msg = "üìû <b>–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —É–¥–æ–±–Ω–µ–µ?</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±:"
    else:
        msg = "üìû <b>How to contact you?</b>\n\nChoose preferred method:"
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')

def handle_contact_method_selection(chat_id, text, session):
    """–í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ —Å–≤—è–∑–∏"""
    lang = session['data'].get('language', 'ru')
    
    if text in ['üì± –¢–µ–ª–µ—Ñ–æ–Ω', 'üí¨ WhatsApp', 'üì± Phone', 'üí¨ WhatsApp']:
        session['data']['contact_method'] = 'phone'
        session['stage'] = 'phone_input'
        
        keyboard = {
            'keyboard': [
                [{'text': 'üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º', 'request_contact': True}],
                ['‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        if lang == 'ru':
            msg = "üì± <b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>\n\n–ú–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é:"
        else:
            msg = "üì± <b>Phone Number</b>\n\nYou can share your number or enter manually:"
            keyboard['keyboard'] = [
                [{'text': 'üì± Share number', 'request_contact': True}],
                ['‚úçÔ∏è Enter manually']
            ]
        
        send_message(chat_id, msg, keyboard, parse_mode='HTML')
        
    elif text in ['üìß Email']:
        session['data']['contact_method'] = 'email'
        session['stage'] = 'email_input'
        
        if lang == 'ru':
            msg = "üìß <b>Email –∞–¥—Ä–µ—Å</b>\n\n–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –ø–ª–∞–Ω–æ–≤:"
        else:
            msg = "üìß <b>Email Address</b>\n\nEnter email for documents and plans:"
        
        send_message(chat_id, msg, parse_mode='HTML')
        
    elif text in ['üì≤ Telegram']:
        session['data']['contact_method'] = 'telegram'
        session['stage'] = 'telegram_input'
        
        if lang == 'ru':
            msg = "üì≤ <b>Telegram</b>\n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à @username –≤ Telegram:"
        else:
            msg = "üì≤ <b>Telegram</b>\n\nEnter your @username in Telegram:"
        
        send_message(chat_i
