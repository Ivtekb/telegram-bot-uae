from flask import Flask, request, jsonify
import requests
import os

app = Flask(__name__)
BOT_TOKEN = "8074002738:AAGNAAHE9sdUDRl7EVwLGYYPrnZK48cxBf4"

# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤—Ä–µ–º–µ–Ω–Ω–æ –≤ –ø–∞–º—è—Ç–∏)
user_sessions = {}

@app.route('/')
def home():
    return "ü§ñ UAE Property Bot (@ivandubai_signal_bot) Stage 2 - Language & Roles"

@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        update = request.json
        
        if update and update.get('message'):
            chat_id = update['message']['chat']['id']
            text = update['message'].get('text', '')
            first_name = update['message']['from'].get('first_name', '–¥—Ä—É–≥')
            
            # –ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if chat_id not in user_sessions:
                user_sessions[chat_id] = {'stage': 'start', 'data': {'name': first_name}}
            
            session = user_sessions[chat_id]
            
            # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
            if text == '/start':
                handle_start(chat_id)
            elif session['stage'] == 'language_select':
                handle_language_selection(chat_id, text, session)
            elif session['stage'] == 'role_select':
                handle_role_selection(chat_id, text, session)
            else:
                send_message(chat_id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º")
        
        return jsonify({'status': 'ok'})
    
    except Exception as e:
        print(f"Error: {e}")
        return jsonify({'status': 'error'})

def handle_start(chat_id):
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã - –≤—ã–±–æ—Ä —è–∑—ã–∫–∞"""
    user_sessions[chat_id] = {'stage': 'language_select', 'data': {}}
    
    keyboard = {
        'keyboard': [
            ['–†—É—Å—Å–∫–∏–π', 'English']
        ],
        'resize_keyboard': True,
        'one_time_keyboard': True
    }
    
    text = "üè† <b>UAE Property Navigator</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language:"
    send_message(chat_id, text, keyboard, parse_mode='HTML')

def handle_language_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    if '–†—É—Å—Å–∫–∏–π' in text:
        session['data']['language'] = 'ru'
        session['stage'] = 'role_select'
        
        keyboard = {
            'keyboard': [
                ['üè† –ñ–∏—Ç—å', 'üìà –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å'],
                ['üîÑ –ü—Ä–æ–¥–∞—Ç—å/–°–¥–∞—Ç—å', 'üéØ –°–º–µ—à–∞–Ω–Ω—ã–π']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        name = session['data'].get('name', '–¥—Ä—É–≥')
        text_msg = f"–ü—Ä–∏–≤–µ—Ç, {name}. –ò–≤–∞–Ω, —Ü–∏—Ñ—Ä–æ–≤–æ–π –Ω–∞–ø–∞—Ä–Ω–∏–∫ –≤ —ç—Ñ–∏—Ä–µ.\n\n–•–æ—á—É —É—Å–ª—ã—à–∞—Ç—å —Ç–≤–æ–π —Ç–µ–∫—É—â–∏–π —Ñ–æ–∫—É—Å: –∂–∏—Ç—å, –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–∫—Ç–∏–≤–æ–º?"
        
        send_message(chat_id, text_msg, keyboard)
        
    elif 'English' in text:
        session['data']['language'] = 'en'
        session['stage'] = 'role_select'
        
        keyboard = {
            'keyboard': [
                ['üè† Live', 'üìà Invest'],
                ['üîÑ Sell/Rent', 'üéØ Mixed']
            ],
            'resize_keyboard': True,
            'one_time_keyboard': True
        }
        
        name = session['data'].get('name', 'friend')
        text_msg = f"Hi, {name}. Ivan, digital partner online.\n\nWhat's your current focus: live, invest, manage property?"
        
        send_message(chat_id, text_msg, keyboard)
    else:
        send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")

def handle_role_selection(chat_id, text, session):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    lang = session['data'].get('language', 'ru')
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å
    if text in ['üè† –ñ–∏—Ç—å', 'üè† Live']:
        session['data']['role'] = 'live'
        role_name = '–ñ–∏—Ç—å' if lang == 'ru' else 'Live'
    elif text in ['üìà –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å', 'üìà Invest']:
        session['data']['role'] = 'invest'
        role_name = '–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å' if lang == 'ru' else 'Invest'
    elif text in ['üîÑ –ü—Ä–æ–¥–∞—Ç—å/–°–¥–∞—Ç—å', 'üîÑ Sell/Rent']:
        session['data']['role'] = 'owner'
        role_name = '–ü—Ä–æ–¥–∞—Ç—å/–°–¥–∞—Ç—å' if lang == 'ru' else 'Sell/Rent'
    elif text in ['üéØ –°–º–µ—à–∞–Ω–Ω—ã–π', 'üéØ Mixed']:
        session['data']['role'] = 'mixed'
        role_name = '–°–º–µ—à–∞–Ω–Ω—ã–π' if lang == 'ru' else 'Mixed'
    else:
        msg = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤" if lang == 'ru' else "Please choose one of the suggested options"
        send_message(chat_id, msg)
        return
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    if lang == 'ru':
        msg = f"‚úÖ <b>–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω!</b>\n\n"
        msg += f"üó£ –Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π\n"
        msg += f"üéØ –§–æ–∫—É—Å: {role_name}\n\n"
        msg += f"üìä <b>–≠—Ç–∞–ø 2 –∑–∞–≤–µ—Ä—à–µ–Ω!</b>\n"
        msg += f"–°–ª–µ–¥—É—é—â–∏–µ —ç—Ç–∞–ø—ã: –±—é–¥–∂–µ—Ç, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã, –ª–æ–∫–∞—Ü–∏–∏, –∫–æ–Ω—Ç–∞–∫—Ç—ã.\n\n"
        msg += f"üîÑ –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∞"
    else:
        msg = f"‚úÖ <b>Profile created!</b>\n\n"
        msg += f"üó£ Language: English\n"
        msg += f"üéØ Focus: {role_name}\n\n"
        msg += f"üìä <b>Stage 2 completed!</b>\n"
        msg += f"Next stages: budget, priorities, locations, contacts.\n\n"
        msg += f"üîÑ Press /start for new test"
    
    keyboard = {
        'keyboard': [
            ['/start']
        ],
        'resize_keyboard': True
    }
    
    send_message(chat_id, msg, keyboard, parse_mode='HTML')
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print(f"Stage 2 completed for user {chat_id}: {session['data']}")

def send_message(chat_id, text, keyboard=None, parse_mode=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    
    payload = {
        'chat_id': chat_id,
        'text': text
    }
    
    if keyboard:
        payload['reply_markup'] = keyboard
    
    if parse_mode:
        payload['parse_mode'] = parse_mode
    
    try:
        response = requests.post(url, json=payload)
        print(f"Message sent to {chat_id}: {text[:50]}...")
        return response.json()
    except Exception as e:
        print(f"Send message error: {e}")
        return None

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 8080))
    app.run(host='0.0.0.0', port=port)
